{"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/tur-mgx.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nrequire(\"@imstar15/api-augment\");\nvar _api = require(\"@polkadot/api\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _oakHelper = _interopRequireDefault(require(\"./common/oakHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./common/mangataHelper\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SUBSTRATE_SS58 = 42;\nconst TARGET_PARA_ID = process.env.TARGET_PARA_ID;\nconst OAK_ENDPOINT = process.env.OAK_ENDPOINT;\nconst TARGET_ENDPOINT = process.env.TARGET_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\n\nasync function main() {\n  await (0, _utilCrypto.cryptoWaitReady)();\n  const keyring = new _api.Keyring();\n  const keyPair = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  console.log('Account address: ', keyPair.address);\n\n  // Initialize\n  await _oakHelper.default.initialize(OAK_ENDPOINT);\n  await _mangataHelper.default.initialize(TARGET_ENDPOINT);\n  const oakApi = _oakHelper.default.getApi();\n  const freeBalance = await _mangataHelper.default.checkFreeBalance(keyPair.address);\n  console.log(\"freeBalance on Mangata\", freeBalance.toString());\n  const proxyAccount = _oakHelper.default.getProxyAccount(keyPair.address);\n  console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n  _mangataHelper.default.addProxy(proxyAccount, keyPair);\n  console.log('Add proxy on mangata successfully!');\n  const proxyExtrinsic = _mangataHelper.default.getApi().tx.system.remarkWithEvent(\"Hello, world!\");\n  const mangataProxyCall = await _mangataHelper.default.createProxyCall(keyPair.address, proxyExtrinsic);\n  const encodedMangataProxyCall = mangataProxyCall.method.toHex(mangataProxyCall);\n  const mangataProxyCallFees = await mangataProxyCall.paymentInfo(keyPair.address);\n  console.log('encodedMangataProxyCall: ', encodedMangataProxyCall);\n  console.log('mangataProxyCallFees: ', mangataProxyCallFees.toHuman());\n\n  // Schedule automated task on Oak\n  // 1. Create the call for scheduleXcmpTask \n  const providedId = \"xcmp_automation_test_\" + (Math.random() + 1).toString(36).substring(7);\n  const xcmpCall = oakApi.tx.automationTime.scheduleXcmpTask(providedId, {\n    Fixed: {\n      executionTimes: [0]\n    }\n  }, TARGET_PARA_ID, 0, encodedMangataProxyCall, mangataProxyCallFees.weight);\n  console.log('xcmpCall: ', xcmpCall);\n  const xcmFrees = await _oakHelper.default.getXcmFees(keyPair.address, xcmpCall);\n  console.log(\"xcmFrees:\", xcmFrees.toHuman());\n\n  // 3. Sign and send scheduleXcmpTask call.\n  // Get TaskId for Task.\n  const taskId = await oakApi.rpc.automationTime.generateTaskId(keyPair.address, providedId);\n  console.log(\"TaskId:\", taskId.toHuman());\n  await _oakHelper.default.sendXcmExtrinsic(xcmpCall, keyPair, taskId);\n}\nmain().catch(console.error).finally(() => process.exit());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTVUJTVFJBVEVfU1M1OCIsIlRBUkdFVF9QQVJBX0lEIiwicHJvY2VzcyIsImVudiIsIk9BS19FTkRQT0lOVCIsIlRBUkdFVF9FTkRQT0lOVCIsIm1haW4iLCJjcnlwdG9XYWl0UmVhZHkiLCJrZXlyaW5nIiwiS2V5cmluZyIsImtleVBhaXIiLCJhZGRGcm9tVXJpIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsImFkZHJlc3MiLCJvYWtIZWxwZXIiLCJpbml0aWFsaXplIiwibWFuZ2F0YUhlbHBlciIsIm9ha0FwaSIsImdldEFwaSIsImZyZWVCYWxhbmNlIiwiY2hlY2tGcmVlQmFsYW5jZSIsInRvU3RyaW5nIiwicHJveHlBY2NvdW50IiwiZ2V0UHJveHlBY2NvdW50IiwiZW5jb2RlQWRkcmVzcyIsImFkZFByb3h5IiwicHJveHlFeHRyaW5zaWMiLCJ0eCIsInN5c3RlbSIsInJlbWFya1dpdGhFdmVudCIsIm1hbmdhdGFQcm94eUNhbGwiLCJjcmVhdGVQcm94eUNhbGwiLCJlbmNvZGVkTWFuZ2F0YVByb3h5Q2FsbCIsIm1ldGhvZCIsInRvSGV4IiwibWFuZ2F0YVByb3h5Q2FsbEZlZXMiLCJwYXltZW50SW5mbyIsInRvSHVtYW4iLCJwcm92aWRlZElkIiwiTWF0aCIsInJhbmRvbSIsInN1YnN0cmluZyIsInhjbXBDYWxsIiwiYXV0b21hdGlvblRpbWUiLCJzY2hlZHVsZVhjbXBUYXNrIiwiRml4ZWQiLCJleGVjdXRpb25UaW1lcyIsIndlaWdodCIsInhjbUZyZWVzIiwiZ2V0WGNtRmVlcyIsInRhc2tJZCIsInJwYyIsImdlbmVyYXRlVGFza0lkIiwic2VuZFhjbUV4dHJpbnNpYyIsImNhdGNoIiwiZXJyb3IiLCJmaW5hbGx5IiwiZXhpdCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL21pa2FzYS9Db2RlL3hjbS1kZW1vL3hjbXBfYXV0b21hdGlvbi9zcmMvIiwic291cmNlcyI6WyJ0dXItbWd4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIkBpbXN0YXIxNS9hcGktYXVnbWVudFwiO1xuaW1wb3J0IHsgS2V5cmluZyB9IGZyb20gXCJAcG9sa2Fkb3QvYXBpXCI7XG5pbXBvcnQgeyBjcnlwdG9XYWl0UmVhZHkgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuaW1wb3J0IG9ha0hlbHBlciBmcm9tIFwiLi9jb21tb24vb2FrSGVscGVyXCI7XG5pbXBvcnQgbWFuZ2F0YUhlbHBlciBmcm9tIFwiLi9jb21tb24vbWFuZ2F0YUhlbHBlclwiO1xuXG5jb25zdCBTVUJTVFJBVEVfU1M1OCA9IDQyO1xuY29uc3QgVEFSR0VUX1BBUkFfSUQgPSBwcm9jZXNzLmVudi5UQVJHRVRfUEFSQV9JRDtcbmNvbnN0IE9BS19FTkRQT0lOVCA9IHByb2Nlc3MuZW52Lk9BS19FTkRQT0lOVDtcbmNvbnN0IFRBUkdFVF9FTkRQT0lOVCA9IHByb2Nlc3MuZW52LlRBUkdFVF9FTkRQT0lOVDtcblxuLy8gY29uc3QgT0FLX1NPVl9BQ0NPVU5UID0gXCI2OGt4emlrUzJXWk5rWVNQV2RZb3VxSDVzRVp1amVjVkN5M1RGdDl4SFdCNU1ERzVcIjtcblxuYXN5bmMgZnVuY3Rpb24gbWFpbiAoKSB7XG4gIGF3YWl0IGNyeXB0b1dhaXRSZWFkeSgpO1xuXG4gIGNvbnN0IGtleXJpbmcgPSBuZXcgS2V5cmluZygpO1xuICBjb25zdCBrZXlQYWlyID0ga2V5cmluZy5hZGRGcm9tVXJpKCcvL0FsaWNlJywgdW5kZWZpbmVkLCAnc3IyNTUxOScpO1xuICBjb25zb2xlLmxvZygnQWNjb3VudCBhZGRyZXNzOiAnLCBrZXlQYWlyLmFkZHJlc3MpO1xuXG4gIC8vIEluaXRpYWxpemVcbiAgYXdhaXQgb2FrSGVscGVyLmluaXRpYWxpemUoT0FLX0VORFBPSU5UKTtcbiAgYXdhaXQgbWFuZ2F0YUhlbHBlci5pbml0aWFsaXplKFRBUkdFVF9FTkRQT0lOVCk7XG4gIGNvbnN0IG9ha0FwaSA9IG9ha0hlbHBlci5nZXRBcGkoKTtcblxuICBjb25zdCBmcmVlQmFsYW5jZSA9IGF3YWl0IG1hbmdhdGFIZWxwZXIuY2hlY2tGcmVlQmFsYW5jZShrZXlQYWlyLmFkZHJlc3MpO1xuICBjb25zb2xlLmxvZyhcImZyZWVCYWxhbmNlIG9uIE1hbmdhdGFcIiwgZnJlZUJhbGFuY2UudG9TdHJpbmcoKSk7XG5cbiAgY29uc3QgcHJveHlBY2NvdW50ID0gb2FrSGVscGVyLmdldFByb3h5QWNjb3VudChrZXlQYWlyLmFkZHJlc3MpO1xuICBjb25zb2xlLmxvZyhcInByb3h5IGFjY291bnQ6XCIsIGtleXJpbmcuZW5jb2RlQWRkcmVzcyhwcm94eUFjY291bnQsIFNVQlNUUkFURV9TUzU4KSk7XG5cbiAgbWFuZ2F0YUhlbHBlci5hZGRQcm94eShwcm94eUFjY291bnQsIGtleVBhaXIpO1xuICBjb25zb2xlLmxvZygnQWRkIHByb3h5IG9uIG1hbmdhdGEgc3VjY2Vzc2Z1bGx5IScpO1xuXG4gIGNvbnN0IHByb3h5RXh0cmluc2ljID0gbWFuZ2F0YUhlbHBlci5nZXRBcGkoKS50eC5zeXN0ZW0ucmVtYXJrV2l0aEV2ZW50KFwiSGVsbG8sIHdvcmxkIVwiKTtcbiAgY29uc3QgbWFuZ2F0YVByb3h5Q2FsbCA9IGF3YWl0IG1hbmdhdGFIZWxwZXIuY3JlYXRlUHJveHlDYWxsKGtleVBhaXIuYWRkcmVzcywgcHJveHlFeHRyaW5zaWMpO1xuICBjb25zdCBlbmNvZGVkTWFuZ2F0YVByb3h5Q2FsbCA9IG1hbmdhdGFQcm94eUNhbGwubWV0aG9kLnRvSGV4KG1hbmdhdGFQcm94eUNhbGwpO1xuICBjb25zdCBtYW5nYXRhUHJveHlDYWxsRmVlcyA9IGF3YWl0IG1hbmdhdGFQcm94eUNhbGwucGF5bWVudEluZm8oa2V5UGFpci5hZGRyZXNzKTtcblxuICBjb25zb2xlLmxvZygnZW5jb2RlZE1hbmdhdGFQcm94eUNhbGw6ICcsIGVuY29kZWRNYW5nYXRhUHJveHlDYWxsKTtcbiAgY29uc29sZS5sb2coJ21hbmdhdGFQcm94eUNhbGxGZWVzOiAnLCBtYW5nYXRhUHJveHlDYWxsRmVlcy50b0h1bWFuKCkpO1xuXG4gICAvLyBTY2hlZHVsZSBhdXRvbWF0ZWQgdGFzayBvbiBPYWtcbiAgLy8gMS4gQ3JlYXRlIHRoZSBjYWxsIGZvciBzY2hlZHVsZVhjbXBUYXNrIFxuICBjb25zdCBwcm92aWRlZElkID0gXCJ4Y21wX2F1dG9tYXRpb25fdGVzdF9cIiArIChNYXRoLnJhbmRvbSgpICsgMSkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KTtcbiAgY29uc3QgeGNtcENhbGwgPSAgb2FrQXBpLnR4LmF1dG9tYXRpb25UaW1lLnNjaGVkdWxlWGNtcFRhc2soXG4gICAgcHJvdmlkZWRJZCxcbiAgICB7IEZpeGVkOiB7IGV4ZWN1dGlvblRpbWVzOiBbMF0gfSB9LFxuICAgIFRBUkdFVF9QQVJBX0lELFxuICAgIDAsXG4gICAgZW5jb2RlZE1hbmdhdGFQcm94eUNhbGwsXG4gICAgbWFuZ2F0YVByb3h5Q2FsbEZlZXMud2VpZ2h0LFxuICApO1xuICBjb25zb2xlLmxvZygneGNtcENhbGw6ICcsIHhjbXBDYWxsKTtcblxuICBjb25zdCB4Y21GcmVlcyA9IGF3YWl0IG9ha0hlbHBlci5nZXRYY21GZWVzKGtleVBhaXIuYWRkcmVzcywgeGNtcENhbGwpO1xuICBjb25zb2xlLmxvZyhcInhjbUZyZWVzOlwiLCB4Y21GcmVlcy50b0h1bWFuKCkpO1xuXG4gIC8vIDMuIFNpZ24gYW5kIHNlbmQgc2NoZWR1bGVYY21wVGFzayBjYWxsLlxuICAvLyBHZXQgVGFza0lkIGZvciBUYXNrLlxuICBjb25zdCB0YXNrSWQgPSBhd2FpdCBvYWtBcGkucnBjLmF1dG9tYXRpb25UaW1lLmdlbmVyYXRlVGFza0lkKGtleVBhaXIuYWRkcmVzcywgcHJvdmlkZWRJZCk7XG4gIGNvbnNvbGUubG9nKFwiVGFza0lkOlwiLCB0YXNrSWQudG9IdW1hbigpKTtcblxuICBhd2FpdCBvYWtIZWxwZXIuc2VuZFhjbUV4dHJpbnNpYyh4Y21wQ2FsbCwga2V5UGFpciwgdGFza0lkKTtcbn1cblxubWFpbigpLmNhdGNoKGNvbnNvbGUuZXJyb3IpLmZpbmFsbHkoKCkgPT4gcHJvY2Vz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","map":{"version":3,"names":["SUBSTRATE_SS58","TARGET_PARA_ID","process","env","OAK_ENDPOINT","TARGET_ENDPOINT","main","cryptoWaitReady","keyring","Keyring","keyPair","addFromUri","undefined","console","log","address","oakHelper","initialize","mangataHelper","oakApi","getApi","freeBalance","checkFreeBalance","toString","proxyAccount","getProxyAccount","encodeAddress","addProxy","proxyExtrinsic","tx","system","remarkWithEvent","mangataProxyCall","createProxyCall","encodedMangataProxyCall","method","toHex","mangataProxyCallFees","paymentInfo","toHuman","providedId","Math","random","substring","xcmpCall","automationTime","scheduleXcmpTask","Fixed","executionTimes","weight","xcmFrees","getXcmFees","taskId","rpc","generateTaskId","sendXcmExtrinsic","catch","error","finally","exit"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/","sources":["tur-mgx.js"],"sourcesContent":["import \"@imstar15/api-augment\";\nimport { Keyring } from \"@polkadot/api\";\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport oakHelper from \"./common/oakHelper\";\nimport mangataHelper from \"./common/mangataHelper\";\n\nconst SUBSTRATE_SS58 = 42;\nconst TARGET_PARA_ID = process.env.TARGET_PARA_ID;\nconst OAK_ENDPOINT = process.env.OAK_ENDPOINT;\nconst TARGET_ENDPOINT = process.env.TARGET_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\n\nasync function main () {\n  await cryptoWaitReady();\n\n  const keyring = new Keyring();\n  const keyPair = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  console.log('Account address: ', keyPair.address);\n\n  // Initialize\n  await oakHelper.initialize(OAK_ENDPOINT);\n  await mangataHelper.initialize(TARGET_ENDPOINT);\n  const oakApi = oakHelper.getApi();\n\n  const freeBalance = await mangataHelper.checkFreeBalance(keyPair.address);\n  console.log(\"freeBalance on Mangata\", freeBalance.toString());\n\n  const proxyAccount = oakHelper.getProxyAccount(keyPair.address);\n  console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  mangataHelper.addProxy(proxyAccount, keyPair);\n  console.log('Add proxy on mangata successfully!');\n\n  const proxyExtrinsic = mangataHelper.getApi().tx.system.remarkWithEvent(\"Hello, world!\");\n  const mangataProxyCall = await mangataHelper.createProxyCall(keyPair.address, proxyExtrinsic);\n  const encodedMangataProxyCall = mangataProxyCall.method.toHex(mangataProxyCall);\n  const mangataProxyCallFees = await mangataProxyCall.paymentInfo(keyPair.address);\n\n  console.log('encodedMangataProxyCall: ', encodedMangataProxyCall);\n  console.log('mangataProxyCallFees: ', mangataProxyCallFees.toHuman());\n\n   // Schedule automated task on Oak\n  // 1. Create the call for scheduleXcmpTask \n  const providedId = \"xcmp_automation_test_\" + (Math.random() + 1).toString(36).substring(7);\n  const xcmpCall =  oakApi.tx.automationTime.scheduleXcmpTask(\n    providedId,\n    { Fixed: { executionTimes: [0] } },\n    TARGET_PARA_ID,\n    0,\n    encodedMangataProxyCall,\n    mangataProxyCallFees.weight,\n  );\n  console.log('xcmpCall: ', xcmpCall);\n\n  const xcmFrees = await oakHelper.getXcmFees(keyPair.address, xcmpCall);\n  console.log(\"xcmFrees:\", xcmFrees.toHuman());\n\n  // 3. Sign and send scheduleXcmpTask call.\n  // Get TaskId for Task.\n  const taskId = await oakApi.rpc.automationTime.generateTaskId(keyPair.address, providedId);\n  console.log(\"TaskId:\", taskId.toHuman());\n\n  await oakHelper.sendXcmExtrinsic(xcmpCall, keyPair, taskId);\n}\n\nmain().catch(console.error).finally(() => process.exit());\n"],"mappings":"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"}},"mtime":1668661477173},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/oakHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst OAK_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass OakHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getAccountInfo = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    const turBalance = balance.free.div(new _bn.default(DECIMAL.TUR)).toNumber();\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {\n      TUR: turBalance\n    };\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\n;\nvar _default = new OakHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["OAK_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","OakHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getAccountInfo","address","data","balance","query","system","account","turBalance","free","div","BN","toNumber","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["oakHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst OAK_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass OakHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getAccountInfo = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    const turBalance = balance.free.div(new BN(DECIMAL.TUR)).toNumber()\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {TUR: turBalance};\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n};\n\nexport default new OakHelper();"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAAuB;AAEvB,MAAMA,WAAW,GAAG,IAAI;AACxB,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACF,eAAe;AAEnD,MAAMG,OAAO,GAAG;EACdC,GAAG,EAAE,qBAAqB;EAC1BC,GAAG,EAAE,eAAe;EACpBC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,SAAS,CAAC;EACdC,UAAU,GAAG,MAAOC,QAAQ,IAAK;IAC/B,MAAMC,GAAG,GAAG,MAAMC,eAAU,CAACC,MAAM,CAAC;MAAEC,QAAQ,EAAE,IAAIC,eAAU,CAACL,QAAQ,CAAC;MAAEM,GAAG,EAAHA;IAAI,CAAC,CAAC;IAClF,IAAI,CAACL,GAAG,GAAGA,GAAG;EACd,CAAC;EAEDM,MAAM,GAAG,MAAM,IAAI,CAACN,GAAG;EAEvBO,cAAc,GAAG,MAAMC,OAAO,IAAG;IAC/B;IACA,MAAM;MAAEC,IAAI,EAAEC;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACV,GAAG,CAACW,KAAK,CAACC,MAAM,CAACC,OAAO,CAACL,OAAO,CAAC;IAEtE,MAAMM,UAAU,GAAGJ,OAAO,CAACK,IAAI,CAACC,GAAG,CAAC,IAAIC,WAAE,CAACxB,OAAO,CAACG,GAAG,CAAC,CAAC,CAACsB,QAAQ,EAAE;;IAEnE;IACA,OAAO;MAACtB,GAAG,EAAEkB;IAAU,CAAC;EAC1B,CAAC;EAEDK,sBAAsB,GAAIX,OAAO,IAAK;IACpC,MAAMY,OAAO,GAAG,IAAIC,YAAO,EAAE;IAC7B,MAAMC,cAAc,GAAGF,OAAO,CAACG,aAAa,CAACf,OAAO,EAAEnB,YAAY,CAAC;IAEnE,MAAMmC,QAAQ,GAAG;MACfC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;QACRC,EAAE,EAAE,CACF;UAAEC,SAAS,EAAEtC;QAAgB,CAAC,EAC9B;UACEuC,WAAW,EAAE;YACXC,OAAO,EAAE,KAAK;YACdC,EAAE,EAAEX,OAAO,CAACY,aAAa,CAACV,cAAc;UAC1C;QACF,CAAC;MAEL;IACF,CAAC;IAED,MAAMW,aAAa,GAAG,IAAI,CAACjC,GAAG,CAACkC,UAAU,CAAC,oBAAoB,EAAEV,QAAQ,CAAC;IAEzE,MAAMW,MAAM,GAAG,IAAIC,UAAU,CAAC,CAC5B,GAAG,IAAIA,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EACvB,GAAG,IAAIC,WAAW,EAAE,CAACC,MAAM,CAAC,UAAU,CAAC,EACvC,GAAGL,aAAa,CAACM,KAAK,EAAE,CACzB,CAAC;IAEF,MAAMC,YAAY,GAAG,IAAAC,cAAQ,EAAC,IAAI,CAACzC,GAAG,CAAC0C,QAAQ,CAACC,IAAI,CAACR,MAAM,CAAC,CAACS,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,OAAOJ,YAAY;EACrB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEK,UAAU,GAAG,OAAOrC,OAAO,EAAEsC,QAAQ,KAAK;IACxC,MAAMC,kBAAkB,GAAGD,QAAQ,CAACE,QAAQ,CAACxC,OAAO,EAAE;MACpDyC,SAAS,EAAE,IAAI,CAACjD,GAAG,CAACkD,WAAW;MAC/BA,WAAW,EAAE,IAAI,CAAClD,GAAG,CAACkD,WAAW;MACjCC,KAAK,EAAE,GAAG;MAAE;MACZC,cAAc,EAAE,IAAI,CAACpD,GAAG,CAACoD;IAC3B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACrD,GAAG,CAACK,GAAG,CAACiD,WAAW,CAACD,IAAI,CAACN,kBAAkB,CAACQ,KAAK,EAAE,CAAC;IAC5E,OAAOF,IAAI;EACb,CAAC;EAEDG,OAAO,GAAG,OAAOC,IAAI,EAAEC,OAAO,KAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,IAAI,EAACC,OAAO,CAAC;IAEpC,OAAO,IAAIG,OAAO,CAAC,MAAOC,OAAO,IAAK;MACpC,MAAMC,KAAK,GAAG,MAAM,IAAI,CAAC/D,GAAG,CAACgE,EAAE,CAACC,WAAW,CAACC,IAAI,CAACT,IAAI,EAAEC,OAAO,CAAC,CAACS,WAAW,CAACC,OAAO,EAAE;QAAEjB,KAAK,EAAE,CAAC;MAAE,CAAC,EAAE,OAAO;QAAEkB;MAAO,CAAC,KAAK;QACxH,IAAIA,MAAM,CAACC,SAAS,EAAE;UACpBX,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGS,MAAM,CAACE,SAAS,CAAChB,KAAK,EAAE,CAAC;UAE/DQ,KAAK,EAAE;UACPD,OAAO,EAAE;QACX,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGS,MAAM,CAACG,IAAI,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAECC,gBAAgB,GAAG,OAAO3B,QAAQ,EAAEsB,OAAO,EAAEM,MAAM,KAAK;IACtD,OAAO,IAAIb,OAAO,CAAC,MAAOC,OAAO,IAAK;MACpC,MAAMC,KAAK,GAAG,MAAMjB,QAAQ,CAACqB,WAAW,CAACC,OAAO,EAAE;QAAEjB,KAAK,EAAE,CAAC;MAAE,CAAC,EAAE,OAAO;QAAEkB;MAAO,CAAC,KAAK;QACrF,IAAIA,MAAM,CAACC,SAAS,EAAE;UACpBX,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGS,MAAM,CAACE,SAAS,CAAChB,KAAK,EAAE,CAAC;;UAE/D;UACA,MAAMoB,IAAI,GAAG,MAAM,IAAI,CAAC3E,GAAG,CAACW,KAAK,CAACiE,cAAc,CAACC,YAAY,CAACT,OAAO,CAAC5D,OAAO,EAAEkE,MAAM,CAAC;UACtFf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,IAAI,CAACG,OAAO,EAAE,CAAC;UAEpCf,KAAK,EAAE;UACPD,OAAO,EAAE;QACX,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGS,MAAM,CAACG,IAAI,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH;AAAC;AAAC,eAEa,IAAI3E,SAAS,EAAE;AAAA"}},"mtime":1668757269868},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst OAK_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n  };\n  getApi = () => this.api;\n  checkFreeBalance = async address => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  };\n  getChainInfo = async account => {\n    // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  };\n  getAccountInfo = async address => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  };\n  getAssetFreeAmount = async (assetId, address, digits) => {\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new _bn.default(digits)).toNumber();\n  };\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address);\n    const decondedAddressHex = (0, _util.u8aToHex)(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: OAK_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  createPool = async account => {\n    return new Promise(async resolve => {\n      await this.mangata.createPool(account, '0', new _bn.default('1000000000000000000000'),\n      // 1000 MGX (MGX is 18 decimals)\n      '4', new _bn.default('1000000000000'),\n      // 1 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(result);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\n;\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["OAK_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","checkFreeBalance","address","tokenBalance","getTokenBalance","free","getChainInfo","account","assets","getAssetsInfo","getAccountInfo","balances","getAssetFreeAmount","assetId","digits","asset","toString","div","BN","toNumber","getProxyAccount","decodedAddress","decodeAddress","decondedAddressHex","u8aToHex","console","log","location","parents","interior","X2","Parachain","AccountId32","network","id","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","createPool","Promise","resolve","statusCallback","result","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\n\nconst OAK_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n  }\n\n  getApi = () => this.api;\n\n  checkFreeBalance = async (address) => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  }\n\n  getChainInfo = async (account) => {\n        // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  }\n\n  getAccountInfo = async (address) => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  }\n\n  getAssetFreeAmount = async (assetId, address, digits )=>{\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new BN(digits)).toNumber();\n  } \n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address);\n    const decondedAddressHex = u8aToHex(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: OAK_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  createPool = async (account) => {\n    return new Promise(async (resolve) => {\n      await this.mangata.createPool(\n        account,\n        '0',\n        new BN('1000000000000000000000'), // 1000 MGX (MGX is 18 decimals)\n        '4',\n        new BN('1000000000000'), // 1 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(result);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n            }\n          },\n        }\n      );\n    });\n  }\n\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n};\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668817450730},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/xcm.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nrequire(\"@imstar15/api-augment\");\nvar _api = require(\"@polkadot/api\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _oakHelper = _interopRequireDefault(require(\"./common/oakHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./common/mangataHelper\"));\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _utils = require(\"./common/utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst OAK_PARA_ID = process.env.OAK_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst OAK_ENDPOINT = process.env.OAK_ENDPOINT;\nconst TARGET_ENDPOINT = process.env.TARGET_ENDPOINT;\nconst mgxCurrencyId = 0;\nconst turCurrencyId = 7;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new _api.Keyring();\nasync function main() {\n  await (0, _utilCrypto.cryptoWaitReady)();\n\n  // Initialize\n  await _oakHelper.default.initialize(OAK_ENDPOINT);\n  await _mangataHelper.default.initialize(TARGET_ENDPOINT);\n  const oakApi = _oakHelper.default.getApi();\n  const account = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  const {\n    address\n  } = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await _mangataHelper.default.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await _oakHelper.default.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n  const DescendOriginAddress32 = _mangataHelper.default.getProxyAccount(mangataAddress);\n  console.log('32 byte address is %s', DescendOriginAddress32);\n\n  // console.log(\"mangata account from turing:\", keyring.encodeAddress(turingAddress MANGATA_SS58));\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  // Create pool\n\n  const mgxAddress = keyring.encodeAddress(\"0xec00ad0ec6eeb271a9689888f644d9262016a26a25314ff4ff5d756404c44112\", MANGATA_SS58);\n  console.log(\"mgxAddress\", mgxAddress);\n\n  // console.log('Minting TUR tokens with sudo permission ...');\n  // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(turCurrencyId, address, 5000000000000000);\n  // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n  // console.log('Minting KSM tokens with sudo permission ...');\n  // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(4, address, 5000000000000000);\n  // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n  // console.log('Creating a TUR-MGX pool with ${} ${} and ${} ${}...');\n  // await mangataHelper.createPool(account);\n\n  // console.log('Creating a KSM-MGX pool with ${} ${} and ${} ${}...');\n  // await mangataHelper.createPool(account);\n\n  const pools = await _mangataHelper.default.getPools();\n  console.log('Pools: ', pools);\n\n  // const chainInfo = await mangataHelper.getChainInfo();\n  // console.log(\"chainInfo\",chainInfo);\n\n  // '8': {\n  //     id: '8',\n  //     chainId: 0,\n  //     decimals: 18,\n  //     name: 'Liquidity Pool Token',\n  //     symbol: 'MGR-TUR',\n  //     address: ''\n  //   }\n  console.log(\"Bob is trying to add liquidity to the MGX-TUR pool\");\n  const bob = keyring.addFromUri('//Bob', undefined, 'sr25519');\n  const {\n    addressBob\n  } = bob;\n  await printAccountInfo(bob);\n\n  //   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  //   mangataHelper.addProxy(proxyAccount, keyPair);\n  //   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n  //   await oakHelper.xcmSend(dest, message);\n}\n\nasync function printAccountInfo(account) {\n  const {\n    address\n  } = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await _mangataHelper.default.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await _oakHelper.default.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n}\nmain().catch(console.error).finally(() => process.exit());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["SUBSTRATE_SS58","TURING_SS58","MANGATA_SS58","OAK_PARA_ID","process","env","MANGATA_PARA_ID","OAK_ENDPOINT","TARGET_ENDPOINT","mgxCurrencyId","turCurrencyId","keyring","Keyring","main","cryptoWaitReady","oakHelper","initialize","mangataHelper","oakApi","getApi","account","addFromUri","undefined","address","rococoAddress","encodeAddress","turingAddress","mangataAddress","mangataAccountInfo","getAccountInfo","turingAccountInfo","console","log","DescendOriginAddress32","getProxyAccount","mgxAddress","pools","getPools","bob","addressBob","printAccountInfo","message","catch","error","finally","exit"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/","sources":["xcm.js"],"sourcesContent":["import \"@imstar15/api-augment\";\nimport { Keyring } from \"@polkadot/api\";\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport oakHelper from \"./common/oakHelper\";\nimport mangataHelper from \"./common/mangataHelper\";\nimport BN from 'bn.js';\nimport { Mangata } from \"@mangata-finance/sdk\";\nimport { sendExtrinsic } from \"./common/utils\";\n\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst OAK_PARA_ID = process.env.OAK_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst OAK_ENDPOINT = process.env.OAK_ENDPOINT;\nconst TARGET_ENDPOINT = process.env.TARGET_ENDPOINT;\n\nconst mgxCurrencyId = 0;\nconst turCurrencyId = 7;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new Keyring();\n\nasync function main () {\n  await cryptoWaitReady();\n\n    // Initialize\n    await oakHelper.initialize(OAK_ENDPOINT);\n    await mangataHelper.initialize(TARGET_ENDPOINT);\n    const oakApi = oakHelper.getApi();\n\n  const account = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  const {address} = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await mangataHelper.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await oakHelper.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n\n  const DescendOriginAddress32 = mangataHelper.getProxyAccount(mangataAddress);\n  console.log('32 byte address is %s', DescendOriginAddress32);\n\n    // console.log(\"mangata account from turing:\", keyring.encodeAddress(turingAddress MANGATA_SS58));\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  // Create pool\n\n    const mgxAddress = keyring.encodeAddress(\"0xec00ad0ec6eeb271a9689888f644d9262016a26a25314ff4ff5d756404c44112\", MANGATA_SS58);\n    console.log(\"mgxAddress\", mgxAddress);\n        \n    // console.log('Minting TUR tokens with sudo permission ...');\n    // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(turCurrencyId, address, 5000000000000000);\n    // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n    // console.log('Minting KSM tokens with sudo permission ...');\n    // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(4, address, 5000000000000000);\n    // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n\t// console.log('Creating a TUR-MGX pool with ${} ${} and ${} ${}...');\n    // await mangataHelper.createPool(account);\n\n    // console.log('Creating a KSM-MGX pool with ${} ${} and ${} ${}...');\n    // await mangataHelper.createPool(account);\n   \n\tconst pools = await mangataHelper.getPools();\n\tconsole.log('Pools: ', pools);\n\n    // const chainInfo = await mangataHelper.getChainInfo();\n    // console.log(\"chainInfo\",chainInfo);\n\n    // '8': {\n    //     id: '8',\n    //     chainId: 0,\n    //     decimals: 18,\n    //     name: 'Liquidity Pool Token',\n    //     symbol: 'MGR-TUR',\n    //     address: ''\n    //   }\n    console.log(\"Bob is trying to add liquidity to the MGX-TUR pool\");\n    const bob = keyring.addFromUri('//Bob', undefined, 'sr25519');\n    const {addressBob} = bob;\n    await printAccountInfo(bob);\n\n//   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n//   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n//   mangataHelper.addProxy(proxyAccount, keyPair);\n//   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n//   await oakHelper.xcmSend(dest, message);\n}\n\nasync function printAccountInfo  (account) {\n    const {address} = account;\n    const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n    const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const mangataAccountInfo = await mangataHelper.getAccountInfo(mangataAddress);\n    const turingAccountInfo = await oakHelper.getAccountInfo(turingAddress);\n\n    console.log(\"Rococo address: \", rococoAddress);\n    console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n    console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n}\n\nmain().catch(console.error).finally(() => process.exit());\n"],"mappings":"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"}},"mtime":1668818073198},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/oakHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst OAK_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass OakHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getAccountInfo = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    const turBalance = balance.free.div(new _bn.default(DECIMAL.TUR)).toNumber();\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {\n      TUR: turBalance\n    };\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\n;\nvar _default = new OakHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["OAK_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","OakHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getAccountInfo","address","data","balance","query","system","account","turBalance","free","div","BN","toNumber","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["oakHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst OAK_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass OakHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getAccountInfo = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    const turBalance = balance.free.div(new BN(DECIMAL.TUR)).toNumber()\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {TUR: turBalance};\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n};\n\nexport default new OakHelper();"],"mappings":"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"}},"mtime":1668757269868},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst OAK_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n  };\n  getApi = () => this.api;\n  checkFreeBalance = async address => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  };\n  getChainInfo = async account => {\n    // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  };\n  getAccountInfo = async address => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  };\n  getAssetFreeAmount = async (assetId, address, digits) => {\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new _bn.default(digits)).toNumber();\n  };\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address);\n    const decondedAddressHex = (0, _util.u8aToHex)(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: OAK_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  createPool = async account => {\n    return new Promise(async resolve => {\n      await this.mangata.createPool(account, '0', new _bn.default('1000000000000000000000'),\n      // 1000 MGX (MGX is 18 decimals)\n      '7', new _bn.default('1000000000000'),\n      // 1 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(result);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\n;\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["OAK_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","checkFreeBalance","address","tokenBalance","getTokenBalance","free","getChainInfo","account","assets","getAssetsInfo","getAccountInfo","balances","getAssetFreeAmount","assetId","digits","asset","toString","div","BN","toNumber","getProxyAccount","decodedAddress","decodeAddress","decondedAddressHex","u8aToHex","console","log","location","parents","interior","X2","Parachain","AccountId32","network","id","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","createPool","Promise","resolve","statusCallback","result","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\n\nconst OAK_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n\n\n  }\n\n  getApi = () => this.api;\n\n  checkFreeBalance = async (address) => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  }\n\n  getChainInfo = async (account) => {\n        // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  }\n\n  getAccountInfo = async (address) => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  }\n\n  getAssetFreeAmount = async (assetId, address, digits )=>{\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new BN(digits)).toNumber();\n  } \n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address);\n    const decondedAddressHex = u8aToHex(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: OAK_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  createPool = async (account) => {\n    return new Promise(async (resolve) => {\n      await this.mangata.createPool(\n        account,\n        '0',\n        new BN('1000000000000000000000'), // 1000 MGX (MGX is 18 decimals)\n        '7',\n        new BN('1000000000000'), // 1 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(result);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n            }\n          },\n        }\n      );\n    });\n  }\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n};\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668795161468},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(async resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    const unsub = await newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        unsub();\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwidW5zdWIiLCJzaWduQW5kU2VuZCIsIm5vbmNlIiwic3RhdHVzIiwiZGlzcGF0Y2hFcnJvciIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiYXNGaW5hbGl6ZWQiLCJ0b1N0cmluZyIsIl8iLCJpc05pbCIsImlzTW9kdWxlIiwibWV0YUVycm9yIiwicmVnaXN0cnkiLCJmaW5kTWV0YUVycm9yIiwiYXNNb2R1bGUiLCJkb2NzIiwibmFtZSIsInNlY3Rpb24iLCJkaXNwYXRjaEVycm9yTWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJNc2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWthc2EvQ29kZS94Y20tZGVtby94Y21wX2F1dG9tYXRpb24vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRjb25zdCB1bnN1YiA9IGF3YWl0IG5ld0V4dHJpbnNpYy5zaWduQW5kU2VuZChrZXlQYWlyLCB7IG5vbmNlOiAtMSB9LCAoeyBzdGF0dXMsIGRpc3BhdGNoRXJyb3IgfSkgPT4ge1xuXHRcdFx0aWYgKHN0YXR1cy50eXBlID09PSAnRmluYWxpemVkJykge1xuICAgICAgICBjb25zb2xlLmxvZygnRmluYWxpemUgZXh0cmluc2ljIGluIGJsb2NrOiAnLCBzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cblx0XHRcdFx0aWYgKCFfLmlzTmlsKGRpc3BhdGNoRXJyb3IpKSB7XG5cdFx0XHRcdFx0aWYgKGRpc3BhdGNoRXJyb3IuaXNNb2R1bGUpIHtcblx0XHRcdFx0XHRcdGNvbnN0IG1ldGFFcnJvciA9IGFwaS5yZWdpc3RyeS5maW5kTWV0YUVycm9yKGRpc3BhdGNoRXJyb3IuYXNNb2R1bGUpXG5cdFx0XHRcdFx0XHRjb25zdCB7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSA9IG1ldGFFcnJvclxuXHRcdFx0XHRcdFx0Y29uc3QgZGlzcGF0Y2hFcnJvck1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSlcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvck1lc3NhZ2V9YFxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyTXNnKVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJNc2cgPSBgVHJhbnNhY3Rpb24gZmluYWxpemVkIHdpdGggZXJyb3IgYnkgYmxvY2tjaGFpbiAke2Rpc3BhdGNoRXJyb3IudG9TdHJpbmcoKX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dW5zdWIoKTtcblx0XHRcdFx0cmVzb2x2ZShzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFBdUI7QUFFaEIsTUFBTUEsYUFBYSxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUU7RUFBRUMsTUFBTSxHQUFHO0FBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLO0VBQ3hGLE9BQU8sSUFBSUMsT0FBTyxDQUFDLE1BQU9DLE9BQU8sSUFBSztJQUVuQyxNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RSxNQUFNUSxLQUFLLEdBQUcsTUFBTUgsWUFBWSxDQUFDSSxXQUFXLENBQUNSLE9BQU8sRUFBRTtNQUFFUyxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDbkcsSUFBSUQsTUFBTSxDQUFDRSxJQUFJLEtBQUssV0FBVyxFQUFFO1FBQzVCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRUosTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO1FBRS9FLElBQUksQ0FBQ0MsZUFBQyxDQUFDQyxLQUFLLENBQUNQLGFBQWEsQ0FBQyxFQUFFO1VBQzVCLElBQUlBLGFBQWEsQ0FBQ1EsUUFBUSxFQUFFO1lBQzNCLE1BQU1DLFNBQVMsR0FBR3RCLEdBQUcsQ0FBQ3VCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDWCxhQUFhLENBQUNZLFFBQVEsQ0FBQztZQUNwRSxNQUFNO2NBQUVDLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsR0FBR04sU0FBUztZQUN6QyxNQUFNTyxvQkFBb0IsR0FBR0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7Y0FBRUwsSUFBSTtjQUFFQyxJQUFJO2NBQUVDO1lBQVEsQ0FBQyxDQUFDO1lBQ3BFLE1BQU1JLE1BQU0sR0FBSSxrREFBaURILG9CQUFxQixFQUFDO1lBQ3ZGZCxPQUFPLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQU0sQ0FBQztVQUNwQixDQUFDLE1BQU07WUFDTixNQUFNQSxNQUFNLEdBQUksa0RBQWlEbkIsYUFBYSxDQUFDSyxRQUFRLEVBQUcsRUFBQztZQUMzRkgsT0FBTyxDQUFDQyxHQUFHLENBQUNnQixNQUFNLENBQUM7VUFDcEI7UUFDRDtRQUVBdkIsS0FBSyxFQUFFO1FBQ1BKLE9BQU8sQ0FBQ08sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","unsub","signAndSend","nonce","status","dispatchError","type","console","log","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise(async (resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tconst unsub = await newExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tif (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tunsub();\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IAEnC,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvE,MAAMQ,KAAK,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACR,OAAO,EAAE;MAAES,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MACnG,IAAID,MAAM,CAACE,IAAI,KAAK,WAAW,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE/E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGtB,GAAG,CAACuB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFd,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FH,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB;QACD;QAEAvB,KAAK,EAAE;QACPJ,OAAO,CAACO,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668808911630},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(async resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    const unsub = await newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        unsub();\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwidW5zdWIiLCJzaWduQW5kU2VuZCIsIm5vbmNlIiwic3RhdHVzIiwiZGlzcGF0Y2hFcnJvciIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiYXNGaW5hbGl6ZWQiLCJ0b1N0cmluZyIsIl8iLCJpc05pbCIsImlzTW9kdWxlIiwibWV0YUVycm9yIiwicmVnaXN0cnkiLCJmaW5kTWV0YUVycm9yIiwiYXNNb2R1bGUiLCJkb2NzIiwibmFtZSIsInNlY3Rpb24iLCJkaXNwYXRjaEVycm9yTWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJNc2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWthc2EvQ29kZS94Y20tZGVtby94Y21wX2F1dG9tYXRpb24vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRjb25zdCB1bnN1YiA9IGF3YWl0IG5ld0V4dHJpbnNpYy5zaWduQW5kU2VuZChrZXlQYWlyLCB7IG5vbmNlOiAtMSB9LCAoeyBzdGF0dXMsIGRpc3BhdGNoRXJyb3IgfSkgPT4ge1xuXHRcdFx0aWYgKHN0YXR1cy50eXBlID09PSAnRmluYWxpemVkJykge1xuICAgICAgICBjb25zb2xlLmxvZygnRmluYWxpemUgZXh0cmluc2ljIGluIGJsb2NrOiAnLCBzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cblx0XHRcdFx0aWYgKCFfLmlzTmlsKGRpc3BhdGNoRXJyb3IpKSB7XG5cdFx0XHRcdFx0aWYgKGRpc3BhdGNoRXJyb3IuaXNNb2R1bGUpIHtcblx0XHRcdFx0XHRcdGNvbnN0IG1ldGFFcnJvciA9IGFwaS5yZWdpc3RyeS5maW5kTWV0YUVycm9yKGRpc3BhdGNoRXJyb3IuYXNNb2R1bGUpXG5cdFx0XHRcdFx0XHRjb25zdCB7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSA9IG1ldGFFcnJvclxuXHRcdFx0XHRcdFx0Y29uc3QgZGlzcGF0Y2hFcnJvck1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSlcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvck1lc3NhZ2V9YFxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyTXNnKVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJNc2cgPSBgVHJhbnNhY3Rpb24gZmluYWxpemVkIHdpdGggZXJyb3IgYnkgYmxvY2tjaGFpbiAke2Rpc3BhdGNoRXJyb3IudG9TdHJpbmcoKX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dW5zdWIoKTtcblx0XHRcdFx0cmVzb2x2ZShzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFBdUI7QUFFaEIsTUFBTUEsYUFBYSxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUU7RUFBRUMsTUFBTSxHQUFHO0FBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLO0VBQ3hGLE9BQU8sSUFBSUMsT0FBTyxDQUFDLE1BQU9DLE9BQU8sSUFBSztJQUVuQyxNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RSxNQUFNUSxLQUFLLEdBQUcsTUFBTUgsWUFBWSxDQUFDSSxXQUFXLENBQUNSLE9BQU8sRUFBRTtNQUFFUyxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDbkcsSUFBSUQsTUFBTSxDQUFDRSxJQUFJLEtBQUssV0FBVyxFQUFFO1FBQzVCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRUosTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO1FBRS9FLElBQUksQ0FBQ0MsZUFBQyxDQUFDQyxLQUFLLENBQUNQLGFBQWEsQ0FBQyxFQUFFO1VBQzVCLElBQUlBLGFBQWEsQ0FBQ1EsUUFBUSxFQUFFO1lBQzNCLE1BQU1DLFNBQVMsR0FBR3RCLEdBQUcsQ0FBQ3VCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDWCxhQUFhLENBQUNZLFFBQVEsQ0FBQztZQUNwRSxNQUFNO2NBQUVDLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsR0FBR04sU0FBUztZQUN6QyxNQUFNTyxvQkFBb0IsR0FBR0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7Y0FBRUwsSUFBSTtjQUFFQyxJQUFJO2NBQUVDO1lBQVEsQ0FBQyxDQUFDO1lBQ3BFLE1BQU1JLE1BQU0sR0FBSSxrREFBaURILG9CQUFxQixFQUFDO1lBQ3ZGZCxPQUFPLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQU0sQ0FBQztVQUNwQixDQUFDLE1BQU07WUFDTixNQUFNQSxNQUFNLEdBQUksa0RBQWlEbkIsYUFBYSxDQUFDSyxRQUFRLEVBQUcsRUFBQztZQUMzRkgsT0FBTyxDQUFDQyxHQUFHLENBQUNnQixNQUFNLENBQUM7VUFDcEI7UUFDRDtRQUVBdkIsS0FBSyxFQUFFO1FBQ1BKLE9BQU8sQ0FBQ08sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","unsub","signAndSend","nonce","status","dispatchError","type","console","log","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise(async (resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tconst unsub = await newExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tif (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tunsub();\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IAEnC,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvE,MAAMQ,KAAK,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACR,OAAO,EAAE;MAAES,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MACnG,IAAID,MAAM,CAACE,IAAI,KAAK,WAAW,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE/E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGtB,GAAG,CAACuB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFd,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FH,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB;QACD;QAEAvB,KAAK,EAAE;QACPJ,OAAO,CAACO,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668808911630}}