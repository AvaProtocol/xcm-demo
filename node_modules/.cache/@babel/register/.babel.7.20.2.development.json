{"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/tur-mgx.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nrequire(\"@imstar15/api-augment\");\nvar _api = require(\"@polkadot/api\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _oakHelper = _interopRequireDefault(require(\"./common/oakHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./common/mangataHelper\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SUBSTRATE_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\n\nasync function main() {\n  await (0, _utilCrypto.cryptoWaitReady)();\n  const keyring = new _api.Keyring();\n  const keyPair = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  console.log('Account address: ', keyPair.address);\n\n  // Initialize\n  await _oakHelper.default.initialize(TURING_ENDPOINT);\n  await _mangataHelper.default.initialize(MANGATA_ENDPOINT);\n  const oakApi = _oakHelper.default.getApi();\n  const freeBalance = await _mangataHelper.default.checkFreeBalance(keyPair.address);\n  console.log(\"freeBalance on Mangata\", freeBalance.toString());\n  const proxyAccount = _oakHelper.default.getProxyAccount(keyPair.address);\n  console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n  _mangataHelper.default.addProxy(proxyAccount, keyPair);\n  console.log('Add proxy on mangata successfully!');\n  const proxyExtrinsic = _mangataHelper.default.getApi().tx.system.remarkWithEvent(\"Hello, world!\");\n  const mangataProxyCall = await _mangataHelper.default.createProxyCall(keyPair.address, proxyExtrinsic);\n  const encodedMangataProxyCall = mangataProxyCall.method.toHex(mangataProxyCall);\n  const mangataProxyCallFees = await mangataProxyCall.paymentInfo(keyPair.address);\n  console.log('encodedMangataProxyCall: ', encodedMangataProxyCall);\n  console.log('mangataProxyCallFees: ', mangataProxyCallFees.toHuman());\n\n  // Schedule automated task on Oak\n  // 1. Create the call for scheduleXcmpTask \n  const providedId = \"xcmp_automation_test_\" + (Math.random() + 1).toString(36).substring(7);\n  const xcmpCall = oakApi.tx.automationTime.scheduleXcmpTask(providedId, {\n    Fixed: {\n      executionTimes: [0]\n    }\n  }, MANGATA_PARA_ID, 0, encodedMangataProxyCall, mangataProxyCallFees.weight);\n  console.log('xcmpCall: ', xcmpCall);\n  const xcmFrees = await _oakHelper.default.getXcmFees(keyPair.address, xcmpCall);\n  console.log(\"xcmFrees:\", xcmFrees.toHuman());\n\n  // 3. Sign and send scheduleXcmpTask call.\n  // Get TaskId for Task.\n  const taskId = await oakApi.rpc.automationTime.generateTaskId(keyPair.address, providedId);\n  console.log(\"TaskId:\", taskId.toHuman());\n  await _oakHelper.default.sendXcmExtrinsic(xcmpCall, keyPair, taskId);\n}\nmain().catch(console.error).finally(() => process.exit());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTVUJTVFJBVEVfU1M1OCIsIlRBUkdFVF9QQVJBX0lEIiwicHJvY2VzcyIsImVudiIsIk9BS19FTkRQT0lOVCIsIlRBUkdFVF9FTkRQT0lOVCIsIm1haW4iLCJjcnlwdG9XYWl0UmVhZHkiLCJrZXlyaW5nIiwiS2V5cmluZyIsImtleVBhaXIiLCJhZGRGcm9tVXJpIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsImFkZHJlc3MiLCJvYWtIZWxwZXIiLCJpbml0aWFsaXplIiwibWFuZ2F0YUhlbHBlciIsIm9ha0FwaSIsImdldEFwaSIsImZyZWVCYWxhbmNlIiwiY2hlY2tGcmVlQmFsYW5jZSIsInRvU3RyaW5nIiwicHJveHlBY2NvdW50IiwiZ2V0UHJveHlBY2NvdW50IiwiZW5jb2RlQWRkcmVzcyIsImFkZFByb3h5IiwicHJveHlFeHRyaW5zaWMiLCJ0eCIsInN5c3RlbSIsInJlbWFya1dpdGhFdmVudCIsIm1hbmdhdGFQcm94eUNhbGwiLCJjcmVhdGVQcm94eUNhbGwiLCJlbmNvZGVkTWFuZ2F0YVByb3h5Q2FsbCIsIm1ldGhvZCIsInRvSGV4IiwibWFuZ2F0YVByb3h5Q2FsbEZlZXMiLCJwYXltZW50SW5mbyIsInRvSHVtYW4iLCJwcm92aWRlZElkIiwiTWF0aCIsInJhbmRvbSIsInN1YnN0cmluZyIsInhjbXBDYWxsIiwiYXV0b21hdGlvblRpbWUiLCJzY2hlZHVsZVhjbXBUYXNrIiwiRml4ZWQiLCJleGVjdXRpb25UaW1lcyIsIndlaWdodCIsInhjbUZyZWVzIiwiZ2V0WGNtRmVlcyIsInRhc2tJZCIsInJwYyIsImdlbmVyYXRlVGFza0lkIiwic2VuZFhjbUV4dHJpbnNpYyIsImNhdGNoIiwiZXJyb3IiLCJmaW5hbGx5IiwiZXhpdCJdLCJzb3VyY2VSb290IjoiL1VzZXJzL21pa2FzYS9Db2RlL3hjbS1kZW1vL3hjbXBfYXV0b21hdGlvbi9zcmMvIiwic291cmNlcyI6WyJ0dXItbWd4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIkBpbXN0YXIxNS9hcGktYXVnbWVudFwiO1xuaW1wb3J0IHsgS2V5cmluZyB9IGZyb20gXCJAcG9sa2Fkb3QvYXBpXCI7XG5pbXBvcnQgeyBjcnlwdG9XYWl0UmVhZHkgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuaW1wb3J0IG9ha0hlbHBlciBmcm9tIFwiLi9jb21tb24vb2FrSGVscGVyXCI7XG5pbXBvcnQgbWFuZ2F0YUhlbHBlciBmcm9tIFwiLi9jb21tb24vbWFuZ2F0YUhlbHBlclwiO1xuXG5jb25zdCBTVUJTVFJBVEVfU1M1OCA9IDQyO1xuY29uc3QgVEFSR0VUX1BBUkFfSUQgPSBwcm9jZXNzLmVudi5UQVJHRVRfUEFSQV9JRDtcbmNvbnN0IE9BS19FTkRQT0lOVCA9IHByb2Nlc3MuZW52Lk9BS19FTkRQT0lOVDtcbmNvbnN0IFRBUkdFVF9FTkRQT0lOVCA9IHByb2Nlc3MuZW52LlRBUkdFVF9FTkRQT0lOVDtcblxuLy8gY29uc3QgT0FLX1NPVl9BQ0NPVU5UID0gXCI2OGt4emlrUzJXWk5rWVNQV2RZb3VxSDVzRVp1amVjVkN5M1RGdDl4SFdCNU1ERzVcIjtcblxuYXN5bmMgZnVuY3Rpb24gbWFpbiAoKSB7XG4gIGF3YWl0IGNyeXB0b1dhaXRSZWFkeSgpO1xuXG4gIGNvbnN0IGtleXJpbmcgPSBuZXcgS2V5cmluZygpO1xuICBjb25zdCBrZXlQYWlyID0ga2V5cmluZy5hZGRGcm9tVXJpKCcvL0FsaWNlJywgdW5kZWZpbmVkLCAnc3IyNTUxOScpO1xuICBjb25zb2xlLmxvZygnQWNjb3VudCBhZGRyZXNzOiAnLCBrZXlQYWlyLmFkZHJlc3MpO1xuXG4gIC8vIEluaXRpYWxpemVcbiAgYXdhaXQgb2FrSGVscGVyLmluaXRpYWxpemUoT0FLX0VORFBPSU5UKTtcbiAgYXdhaXQgbWFuZ2F0YUhlbHBlci5pbml0aWFsaXplKFRBUkdFVF9FTkRQT0lOVCk7XG4gIGNvbnN0IG9ha0FwaSA9IG9ha0hlbHBlci5nZXRBcGkoKTtcblxuICBjb25zdCBmcmVlQmFsYW5jZSA9IGF3YWl0IG1hbmdhdGFIZWxwZXIuY2hlY2tGcmVlQmFsYW5jZShrZXlQYWlyLmFkZHJlc3MpO1xuICBjb25zb2xlLmxvZyhcImZyZWVCYWxhbmNlIG9uIE1hbmdhdGFcIiwgZnJlZUJhbGFuY2UudG9TdHJpbmcoKSk7XG5cbiAgY29uc3QgcHJveHlBY2NvdW50ID0gb2FrSGVscGVyLmdldFByb3h5QWNjb3VudChrZXlQYWlyLmFkZHJlc3MpO1xuICBjb25zb2xlLmxvZyhcInByb3h5IGFjY291bnQ6XCIsIGtleXJpbmcuZW5jb2RlQWRkcmVzcyhwcm94eUFjY291bnQsIFNVQlNUUkFURV9TUzU4KSk7XG5cbiAgbWFuZ2F0YUhlbHBlci5hZGRQcm94eShwcm94eUFjY291bnQsIGtleVBhaXIpO1xuICBjb25zb2xlLmxvZygnQWRkIHByb3h5IG9uIG1hbmdhdGEgc3VjY2Vzc2Z1bGx5IScpO1xuXG4gIGNvbnN0IHByb3h5RXh0cmluc2ljID0gbWFuZ2F0YUhlbHBlci5nZXRBcGkoKS50eC5zeXN0ZW0ucmVtYXJrV2l0aEV2ZW50KFwiSGVsbG8sIHdvcmxkIVwiKTtcbiAgY29uc3QgbWFuZ2F0YVByb3h5Q2FsbCA9IGF3YWl0IG1hbmdhdGFIZWxwZXIuY3JlYXRlUHJveHlDYWxsKGtleVBhaXIuYWRkcmVzcywgcHJveHlFeHRyaW5zaWMpO1xuICBjb25zdCBlbmNvZGVkTWFuZ2F0YVByb3h5Q2FsbCA9IG1hbmdhdGFQcm94eUNhbGwubWV0aG9kLnRvSGV4KG1hbmdhdGFQcm94eUNhbGwpO1xuICBjb25zdCBtYW5nYXRhUHJveHlDYWxsRmVlcyA9IGF3YWl0IG1hbmdhdGFQcm94eUNhbGwucGF5bWVudEluZm8oa2V5UGFpci5hZGRyZXNzKTtcblxuICBjb25zb2xlLmxvZygnZW5jb2RlZE1hbmdhdGFQcm94eUNhbGw6ICcsIGVuY29kZWRNYW5nYXRhUHJveHlDYWxsKTtcbiAgY29uc29sZS5sb2coJ21hbmdhdGFQcm94eUNhbGxGZWVzOiAnLCBtYW5nYXRhUHJveHlDYWxsRmVlcy50b0h1bWFuKCkpO1xuXG4gICAvLyBTY2hlZHVsZSBhdXRvbWF0ZWQgdGFzayBvbiBPYWtcbiAgLy8gMS4gQ3JlYXRlIHRoZSBjYWxsIGZvciBzY2hlZHVsZVhjbXBUYXNrIFxuICBjb25zdCBwcm92aWRlZElkID0gXCJ4Y21wX2F1dG9tYXRpb25fdGVzdF9cIiArIChNYXRoLnJhbmRvbSgpICsgMSkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KTtcbiAgY29uc3QgeGNtcENhbGwgPSAgb2FrQXBpLnR4LmF1dG9tYXRpb25UaW1lLnNjaGVkdWxlWGNtcFRhc2soXG4gICAgcHJvdmlkZWRJZCxcbiAgICB7IEZpeGVkOiB7IGV4ZWN1dGlvblRpbWVzOiBbMF0gfSB9LFxuICAgIFRBUkdFVF9QQVJBX0lELFxuICAgIDAsXG4gICAgZW5jb2RlZE1hbmdhdGFQcm94eUNhbGwsXG4gICAgbWFuZ2F0YVByb3h5Q2FsbEZlZXMud2VpZ2h0LFxuICApO1xuICBjb25zb2xlLmxvZygneGNtcENhbGw6ICcsIHhjbXBDYWxsKTtcblxuICBjb25zdCB4Y21GcmVlcyA9IGF3YWl0IG9ha0hlbHBlci5nZXRYY21GZWVzKGtleVBhaXIuYWRkcmVzcywgeGNtcENhbGwpO1xuICBjb25zb2xlLmxvZyhcInhjbUZyZWVzOlwiLCB4Y21GcmVlcy50b0h1bWFuKCkpO1xuXG4gIC8vIDMuIFNpZ24gYW5kIHNlbmQgc2NoZWR1bGVYY21wVGFzayBjYWxsLlxuICAvLyBHZXQgVGFza0lkIGZvciBUYXNrLlxuICBjb25zdCB0YXNrSWQgPSBhd2FpdCBvYWtBcGkucnBjLmF1dG9tYXRpb25UaW1lLmdlbmVyYXRlVGFza0lkKGtleVBhaXIuYWRkcmVzcywgcHJvdmlkZWRJZCk7XG4gIGNvbnNvbGUubG9nKFwiVGFza0lkOlwiLCB0YXNrSWQudG9IdW1hbigpKTtcblxuICBhd2FpdCBvYWtIZWxwZXIuc2VuZFhjbUV4dHJpbnNpYyh4Y21wQ2FsbCwga2V5UGFpciwgdGFza0lkKTtcbn1cblxubWFpbigpLmNhdGNoKGNvbnNvbGUuZXJyb3IpLmZpbmFsbHkoKCkgPT4gcHJvY2Vzcy5leGl0KCkpO1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBbUQ7QUFFbkQsTUFBTUEsY0FBYyxHQUFHLEVBQUU7QUFDekIsTUFBTUMsY0FBYyxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsY0FBYztBQUNqRCxNQUFNRyxZQUFZLEdBQUdGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxZQUFZO0FBQzdDLE1BQU1DLGVBQWUsR0FBR0gsT0FBTyxDQUFDQyxHQUFHLENBQUNFLGVBQWU7O0FBRW5EOztBQUVBLGVBQWVDLElBQUksR0FBSTtFQUNyQixNQUFNLElBQUFDLDJCQUFlLEdBQUU7RUFFdkIsTUFBTUMsT0FBTyxHQUFHLElBQUlDLFlBQU8sRUFBRTtFQUM3QixNQUFNQyxPQUFPLEdBQUdGLE9BQU8sQ0FBQ0csVUFBVSxDQUFDLFNBQVMsRUFBRUMsU0FBUyxFQUFFLFNBQVMsQ0FBQztFQUNuRUMsT0FBTyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLEVBQUVKLE9BQU8sQ0FBQ0ssT0FBTyxDQUFDOztFQUVqRDtFQUNBLE1BQU1DLGtCQUFTLENBQUNDLFVBQVUsQ0FBQ2IsWUFBWSxDQUFDO0VBQ3hDLE1BQU1jLHNCQUFhLENBQUNELFVBQVUsQ0FBQ1osZUFBZSxDQUFDO0VBQy9DLE1BQU1jLE1BQU0sR0FBR0gsa0JBQVMsQ0FBQ0ksTUFBTSxFQUFFO0VBRWpDLE1BQU1DLFdBQVcsR0FBRyxNQUFNSCxzQkFBYSxDQUFDSSxnQkFBZ0IsQ0FBQ1osT0FBTyxDQUFDSyxPQUFPLENBQUM7RUFDekVGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixFQUFFTyxXQUFXLENBQUNFLFFBQVEsRUFBRSxDQUFDO0VBRTdELE1BQU1DLFlBQVksR0FBR1Isa0JBQVMsQ0FBQ1MsZUFBZSxDQUFDZixPQUFPLENBQUNLLE9BQU8sQ0FBQztFQUMvREYsT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUVOLE9BQU8sQ0FBQ2tCLGFBQWEsQ0FBQ0YsWUFBWSxFQUFFeEIsY0FBYyxDQUFDLENBQUM7RUFFbEZrQixzQkFBYSxDQUFDUyxRQUFRLENBQUNILFlBQVksRUFBRWQsT0FBTyxDQUFDO0VBQzdDRyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQztFQUVqRCxNQUFNYyxjQUFjLEdBQUdWLHNCQUFhLENBQUNFLE1BQU0sRUFBRSxDQUFDUyxFQUFFLENBQUNDLE1BQU0sQ0FBQ0MsZUFBZSxDQUFDLGVBQWUsQ0FBQztFQUN4RixNQUFNQyxnQkFBZ0IsR0FBRyxNQUFNZCxzQkFBYSxDQUFDZSxlQUFlLENBQUN2QixPQUFPLENBQUNLLE9BQU8sRUFBRWEsY0FBYyxDQUFDO0VBQzdGLE1BQU1NLHVCQUF1QixHQUFHRixnQkFBZ0IsQ0FBQ0csTUFBTSxDQUFDQyxLQUFLLENBQUNKLGdCQUFnQixDQUFDO0VBQy9FLE1BQU1LLG9CQUFvQixHQUFHLE1BQU1MLGdCQUFnQixDQUFDTSxXQUFXLENBQUM1QixPQUFPLENBQUNLLE9BQU8sQ0FBQztFQUVoRkYsT0FBTyxDQUFDQyxHQUFHLENBQUMsMkJBQTJCLEVBQUVvQix1QkFBdUIsQ0FBQztFQUNqRXJCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixFQUFFdUIsb0JBQW9CLENBQUNFLE9BQU8sRUFBRSxDQUFDOztFQUVwRTtFQUNEO0VBQ0EsTUFBTUMsVUFBVSxHQUFHLHVCQUF1QixHQUFHLENBQUNDLElBQUksQ0FBQ0MsTUFBTSxFQUFFLEdBQUcsQ0FBQyxFQUFFbkIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDb0IsU0FBUyxDQUFDLENBQUMsQ0FBQztFQUMxRixNQUFNQyxRQUFRLEdBQUl6QixNQUFNLENBQUNVLEVBQUUsQ0FBQ2dCLGNBQWMsQ0FBQ0MsZ0JBQWdCLENBQ3pETixVQUFVLEVBQ1Y7SUFBRU8sS0FBSyxFQUFFO01BQUVDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFBRTtFQUFFLENBQUMsRUFDbEMvQyxjQUFjLEVBQ2QsQ0FBQyxFQUNEaUMsdUJBQXVCLEVBQ3ZCRyxvQkFBb0IsQ0FBQ1ksTUFBTSxDQUM1QjtFQUNEcEMsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxFQUFFOEIsUUFBUSxDQUFDO0VBRW5DLE1BQU1NLFFBQVEsR0FBRyxNQUFNbEMsa0JBQVMsQ0FBQ21DLFVBQVUsQ0FBQ3pDLE9BQU8sQ0FBQ0ssT0FBTyxFQUFFNkIsUUFBUSxDQUFDO0VBQ3RFL0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsV0FBVyxFQUFFb0MsUUFBUSxDQUFDWCxPQUFPLEVBQUUsQ0FBQzs7RUFFNUM7RUFDQTtFQUNBLE1BQU1hLE1BQU0sR0FBRyxNQUFNakMsTUFBTSxDQUFDa0MsR0FBRyxDQUFDUixjQUFjLENBQUNTLGNBQWMsQ0FBQzVDLE9BQU8sQ0FBQ0ssT0FBTyxFQUFFeUIsVUFBVSxDQUFDO0VBQzFGM0IsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFFc0MsTUFBTSxDQUFDYixPQUFPLEVBQUUsQ0FBQztFQUV4QyxNQUFNdkIsa0JBQVMsQ0FBQ3VDLGdCQUFnQixDQUFDWCxRQUFRLEVBQUVsQyxPQUFPLEVBQUUwQyxNQUFNLENBQUM7QUFDN0Q7QUFFQTlDLElBQUksRUFBRSxDQUFDa0QsS0FBSyxDQUFDM0MsT0FBTyxDQUFDNEMsS0FBSyxDQUFDLENBQUNDLE9BQU8sQ0FBQyxNQUFNeEQsT0FBTyxDQUFDeUQsSUFBSSxFQUFFLENBQUMifQ==","map":{"version":3,"names":["SUBSTRATE_SS58","MANGATA_PARA_ID","process","env","TURING_ENDPOINT","MANGATA_ENDPOINT","main","cryptoWaitReady","keyring","Keyring","keyPair","addFromUri","undefined","console","log","address","oakHelper","initialize","mangataHelper","oakApi","getApi","freeBalance","checkFreeBalance","toString","proxyAccount","getProxyAccount","encodeAddress","addProxy","proxyExtrinsic","tx","system","remarkWithEvent","mangataProxyCall","createProxyCall","encodedMangataProxyCall","method","toHex","mangataProxyCallFees","paymentInfo","toHuman","providedId","Math","random","substring","xcmpCall","automationTime","scheduleXcmpTask","Fixed","executionTimes","weight","xcmFrees","getXcmFees","taskId","rpc","generateTaskId","sendXcmExtrinsic","catch","error","finally","exit"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/","sources":["tur-mgx.js"],"sourcesContent":["import \"@imstar15/api-augment\";\nimport { Keyring } from \"@polkadot/api\";\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport oakHelper from \"./common/oakHelper\";\nimport mangataHelper from \"./common/mangataHelper\";\n\nconst SUBSTRATE_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\n\nasync function main () {\n  await cryptoWaitReady();\n\n  const keyring = new Keyring();\n  const keyPair = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  console.log('Account address: ', keyPair.address);\n\n  // Initialize\n  await oakHelper.initialize(TURING_ENDPOINT);\n  await mangataHelper.initialize(MANGATA_ENDPOINT);\n  const oakApi = oakHelper.getApi();\n\n  const freeBalance = await mangataHelper.checkFreeBalance(keyPair.address);\n  console.log(\"freeBalance on Mangata\", freeBalance.toString());\n\n  const proxyAccount = oakHelper.getProxyAccount(keyPair.address);\n  console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  mangataHelper.addProxy(proxyAccount, keyPair);\n  console.log('Add proxy on mangata successfully!');\n\n  const proxyExtrinsic = mangataHelper.getApi().tx.system.remarkWithEvent(\"Hello, world!\");\n  const mangataProxyCall = await mangataHelper.createProxyCall(keyPair.address, proxyExtrinsic);\n  const encodedMangataProxyCall = mangataProxyCall.method.toHex(mangataProxyCall);\n  const mangataProxyCallFees = await mangataProxyCall.paymentInfo(keyPair.address);\n\n  console.log('encodedMangataProxyCall: ', encodedMangataProxyCall);\n  console.log('mangataProxyCallFees: ', mangataProxyCallFees.toHuman());\n\n   // Schedule automated task on Oak\n  // 1. Create the call for scheduleXcmpTask \n  const providedId = \"xcmp_automation_test_\" + (Math.random() + 1).toString(36).substring(7);\n  const xcmpCall =  oakApi.tx.automationTime.scheduleXcmpTask(\n    providedId,\n    { Fixed: { executionTimes: [0] } },\n    MANGATA_PARA_ID,\n    0,\n    encodedMangataProxyCall,\n    mangataProxyCallFees.weight,\n  );\n  console.log('xcmpCall: ', xcmpCall);\n\n  const xcmFrees = await oakHelper.getXcmFees(keyPair.address, xcmpCall);\n  console.log(\"xcmFrees:\", xcmFrees.toHuman());\n\n  // 3. Sign and send scheduleXcmpTask call.\n  // Get TaskId for Task.\n  const taskId = await oakApi.rpc.automationTime.generateTaskId(keyPair.address, providedId);\n  console.log(\"TaskId:\", taskId.toHuman());\n\n  await oakHelper.sendXcmExtrinsic(xcmpCall, keyPair, taskId);\n}\n\nmain().catch(console.error).finally(() => process.exit());\n"],"mappings":"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"}},"mtime":1668661477173},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/oakHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass OakHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getAccountInfo = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    const turBalance = balance.free.div(new _bn.default(DECIMAL.TUR)).toNumber();\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {\n      TUR: turBalance\n    };\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\n;\nvar _default = new OakHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","OakHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getAccountInfo","address","data","balance","query","system","account","turBalance","free","div","BN","toNumber","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["oakHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass OakHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getAccountInfo = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    const turBalance = balance.free.div(new BN(DECIMAL.TUR)).toNumber()\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {TUR: turBalance};\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n};\n\nexport default new OakHelper();"],"mappings":"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"}},"mtime":1668757269868},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n  };\n  getApi = () => this.api;\n  checkFreeBalance = async address => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  };\n  getChainInfo = async account => {\n    // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  };\n  getAccountInfo = async address => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  };\n  getAssetFreeAmount = async (assetId, address, digits) => {\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new _bn.default(digits)).toNumber();\n  };\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address);\n    const decondedAddressHex = (0, _util.u8aToHex)(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: TURING_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  createPool = async account => {\n    return new Promise(async resolve => {\n      await this.mangata.createPool(account, '0', new _bn.default('1000000000000000000000'),\n      // 1000 MGX (MGX is 18 decimals)\n      '4', new _bn.default('1000000000000'),\n      // 1 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(result);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\n;\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","checkFreeBalance","address","tokenBalance","getTokenBalance","free","getChainInfo","account","assets","getAssetsInfo","getAccountInfo","balances","getAssetFreeAmount","assetId","digits","asset","toString","div","BN","toNumber","getProxyAccount","decodedAddress","decodeAddress","decondedAddressHex","u8aToHex","console","log","location","parents","interior","X2","Parachain","AccountId32","network","id","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","createPool","Promise","resolve","statusCallback","result","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n  }\n\n  getApi = () => this.api;\n\n  checkFreeBalance = async (address) => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  }\n\n  getChainInfo = async (account) => {\n        // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  }\n\n  getAccountInfo = async (address) => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  }\n\n  getAssetFreeAmount = async (assetId, address, digits )=>{\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new BN(digits)).toNumber();\n  } \n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address);\n    const decondedAddressHex = u8aToHex(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: TURING_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  createPool = async (account) => {\n    return new Promise(async (resolve) => {\n      await this.mangata.createPool(\n        account,\n        '0',\n        new BN('1000000000000000000000'), // 1000 MGX (MGX is 18 decimals)\n        '4',\n        new BN('1000000000000'), // 1 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(result);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n            }\n          },\n        }\n      );\n    });\n  }\n\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n};\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668817450730},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/xcm.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nrequire(\"@imstar15/api-augment\");\nvar _api = require(\"@polkadot/api\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _oakHelper = _interopRequireDefault(require(\"./common/oakHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./common/mangataHelper\"));\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _utils = require(\"./common/utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst TURING_PARA_ID = process.env.TURING_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\nconst mgxCurrencyId = 0;\nconst turCurrencyId = 7;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new _api.Keyring();\nasync function main() {\n  await (0, _utilCrypto.cryptoWaitReady)();\n\n  // Initialize\n  await _oakHelper.default.initialize(TURING_ENDPOINT);\n  await _mangataHelper.default.initialize(MANGATA_ENDPOINT);\n  const oakApi = _oakHelper.default.getApi();\n  const account = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  const {\n    address\n  } = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await _mangataHelper.default.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await _oakHelper.default.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n  const DescendOriginAddress32 = _mangataHelper.default.getProxyAccount(mangataAddress);\n  console.log('32 byte address is %s', DescendOriginAddress32);\n\n  // console.log(\"mangata account from turing:\", keyring.encodeAddress(turingAddress MANGATA_SS58));\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  // Create pool\n\n  const mgxAddress = keyring.encodeAddress(\"0xec00ad0ec6eeb271a9689888f644d9262016a26a25314ff4ff5d756404c44112\", MANGATA_SS58);\n  console.log(\"mgxAddress\", mgxAddress);\n\n  // console.log('Minting TUR tokens with sudo permission ...');\n  // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(turCurrencyId, address, 5000000000000000);\n  // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n  // console.log('Minting KSM tokens with sudo permission ...');\n  // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(4, address, 5000000000000000);\n  // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n  // console.log('Creating a TUR-MGX pool with ${} ${} and ${} ${}...');\n  // await mangataHelper.createPool(account);\n\n  // console.log('Creating a KSM-MGX pool with ${} ${} and ${} ${}...');\n  // await mangataHelper.createPool(account);\n\n  const pools = await _mangataHelper.default.getPools();\n  console.log('Pools: ', pools);\n\n  // const chainInfo = await mangataHelper.getChainInfo();\n  // console.log(\"chainInfo\",chainInfo);\n\n  // '8': {\n  //     id: '8',\n  //     chainId: 0,\n  //     decimals: 18,\n  //     name: 'Liquidity Pool Token',\n  //     symbol: 'MGR-TUR',\n  //     address: ''\n  //   }\n  console.log(\"Bob is trying to add liquidity to the MGX-TUR pool\");\n  const bob = keyring.addFromUri('//Bob', undefined, 'sr25519');\n  const {\n    addressBob\n  } = bob;\n  await printAccountInfo(bob);\n\n  //   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  //   mangataHelper.addProxy(proxyAccount, keyPair);\n  //   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n  //   await oakHelper.xcmSend(dest, message);\n}\n\nasync function printAccountInfo(account) {\n  const {\n    address\n  } = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await _mangataHelper.default.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await _oakHelper.default.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n}\nmain().catch(console.error).finally(() => process.exit());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["SUBSTRATE_SS58","TURING_SS58","MANGATA_SS58","TURING_PARA_ID","process","env","MANGATA_PARA_ID","TURING_ENDPOINT","MANGATA_ENDPOINT","mgxCurrencyId","turCurrencyId","keyring","Keyring","main","cryptoWaitReady","oakHelper","initialize","mangataHelper","oakApi","getApi","account","addFromUri","undefined","address","rococoAddress","encodeAddress","turingAddress","mangataAddress","mangataAccountInfo","getAccountInfo","turingAccountInfo","console","log","DescendOriginAddress32","getProxyAccount","mgxAddress","pools","getPools","bob","addressBob","printAccountInfo","message","catch","error","finally","exit"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/","sources":["xcm.js"],"sourcesContent":["import \"@imstar15/api-augment\";\nimport { Keyring } from \"@polkadot/api\";\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport oakHelper from \"./common/oakHelper\";\nimport mangataHelper from \"./common/mangataHelper\";\nimport BN from 'bn.js';\nimport { Mangata } from \"@mangata-finance/sdk\";\nimport { sendExtrinsic } from \"./common/utils\";\n\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst TURING_PARA_ID = process.env.TURING_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\n\nconst mgxCurrencyId = 0;\nconst turCurrencyId = 7;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new Keyring();\n\nasync function main () {\n  await cryptoWaitReady();\n\n    // Initialize\n    await oakHelper.initialize(TURING_ENDPOINT);\n    await mangataHelper.initialize(MANGATA_ENDPOINT);\n    const oakApi = oakHelper.getApi();\n\n  const account = keyring.addFromUri('//Alice', undefined, 'sr25519');\n  const {address} = account;\n  const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n  const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n  const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n  const mangataAccountInfo = await mangataHelper.getAccountInfo(mangataAddress);\n  const turingAccountInfo = await oakHelper.getAccountInfo(turingAddress);\n  console.log(\"Rococo address: \", rococoAddress);\n  console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n  console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n\n  const DescendOriginAddress32 = mangataHelper.getProxyAccount(mangataAddress);\n  console.log('32 byte address is %s', DescendOriginAddress32);\n\n    // console.log(\"mangata account from turing:\", keyring.encodeAddress(turingAddress MANGATA_SS58));\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  // Create pool\n\n    const mgxAddress = keyring.encodeAddress(\"0xec00ad0ec6eeb271a9689888f644d9262016a26a25314ff4ff5d756404c44112\", MANGATA_SS58);\n    console.log(\"mgxAddress\", mgxAddress);\n        \n    // console.log('Minting TUR tokens with sudo permission ...');\n    // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(turCurrencyId, address, 5000000000000000);\n    // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n    // console.log('Minting KSM tokens with sudo permission ...');\n    // const mintTokenExtrinsic = mangataHelper.getApi().tx.tokens.mint(4, address, 5000000000000000);\n    // await sendExtrinsic(mangataHelper.getApi(), mintTokenExtrinsic, account, { isSudo: true });\n\n\t// console.log('Creating a TUR-MGX pool with ${} ${} and ${} ${}...');\n    // await mangataHelper.createPool(account);\n\n    // console.log('Creating a KSM-MGX pool with ${} ${} and ${} ${}...');\n    // await mangataHelper.createPool(account);\n   \n\tconst pools = await mangataHelper.getPools();\n\tconsole.log('Pools: ', pools);\n\n    // const chainInfo = await mangataHelper.getChainInfo();\n    // console.log(\"chainInfo\",chainInfo);\n\n    // '8': {\n    //     id: '8',\n    //     chainId: 0,\n    //     decimals: 18,\n    //     name: 'Liquidity Pool Token',\n    //     symbol: 'MGR-TUR',\n    //     address: ''\n    //   }\n    console.log(\"Bob is trying to add liquidity to the MGX-TUR pool\");\n    const bob = keyring.addFromUri('//Bob', undefined, 'sr25519');\n    const {addressBob} = bob;\n    await printAccountInfo(bob);\n\n//   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n//   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n//   mangataHelper.addProxy(proxyAccount, keyPair);\n//   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n//   await oakHelper.xcmSend(dest, message);\n}\n\nasync function printAccountInfo  (account) {\n    const {address} = account;\n    const rococoAddress = keyring.encodeAddress(address, SUBSTRATE_SS58);\n    const turingAddress = keyring.encodeAddress(address, TURING_SS58);\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const mangataAccountInfo = await mangataHelper.getAccountInfo(mangataAddress);\n    const turingAccountInfo = await oakHelper.getAccountInfo(turingAddress);\n\n    console.log(\"Rococo address: \", rococoAddress);\n    console.log(\"Turing address: \", turingAddress, turingAccountInfo);\n    console.log(\"Mangata address: \", mangataAddress, mangataAccountInfo);\n}\n\nmain().catch(console.error).finally(() => process.exit());\n"],"mappings":"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"}},"mtime":1668818073198},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/oakHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass OakHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getAccountInfo = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    const turBalance = balance.free.div(new _bn.default(DECIMAL.TUR)).toNumber();\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {\n      TUR: turBalance\n    };\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\n;\nvar _default = new OakHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","OakHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getAccountInfo","address","data","balance","query","system","account","turBalance","free","div","BN","toNumber","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["oakHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass OakHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getAccountInfo = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    const turBalance = balance.free.div(new BN(DECIMAL.TUR)).toNumber()\n\n    // TODO: figure out how to retrieve balance of other tokens\n    return {TUR: turBalance};\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n};\n\nexport default new OakHelper();"],"mappings":"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"}},"mtime":1668757269868},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n  };\n  getApi = () => this.api;\n  checkFreeBalance = async address => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  };\n  getChainInfo = async account => {\n    // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  };\n  getAccountInfo = async address => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  };\n  getAssetFreeAmount = async (assetId, address, digits) => {\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new _bn.default(digits)).toNumber();\n  };\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address);\n    const decondedAddressHex = (0, _util.u8aToHex)(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: TURING_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  createPool = async account => {\n    return new Promise(async resolve => {\n      await this.mangata.createPool(account, '0', new _bn.default('1000000000000000000000'),\n      // 1000 MGX (MGX is 18 decimals)\n      '7', new _bn.default('1000000000000'),\n      // 1 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(result);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\n;\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGX","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","checkFreeBalance","address","tokenBalance","getTokenBalance","free","getChainInfo","account","assets","getAssetsInfo","getAccountInfo","balances","getAssetFreeAmount","assetId","digits","asset","toString","div","BN","toNumber","getProxyAccount","decodedAddress","decodeAddress","decondedAddressHex","u8aToHex","console","log","location","parents","interior","X2","Parachain","AccountId32","network","id","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","createPool","Promise","resolve","statusCallback","result","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGX: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n\n\n  }\n\n  getApi = () => this.api;\n\n  checkFreeBalance = async (address) => {\n    const tokenBalance = await this.mangata.getTokenBalance('0', address);\n    return tokenBalance.free;\n  }\n\n  getChainInfo = async (account) => {\n        // 2. Read chain asssets\n    const assets = await this.mangata.getAssetsInfo();\n    return assets;\n  }\n\n  getAccountInfo = async (address) => {\n    const balances = {};\n    balances.MGX = await this.getAssetFreeAmount(0, address, DECIMAL.MGX);\n    balances.KSM = await this.getAssetFreeAmount(4, address, DECIMAL.KSM);\n    balances.TUR = await this.getAssetFreeAmount(7, address, DECIMAL.TUR);\n    // balances['KSM-MGX'] = await this.mangata.getTokenBalance('5', account.address);\n    return balances;\n  }\n\n  getAssetFreeAmount = async (assetId, address, digits )=>{\n    const asset = await this.mangata.getTokenBalance(assetId.toString(), address);\n    return asset.free.div(new BN(digits)).toNumber();\n  } \n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address);\n    const decondedAddressHex = u8aToHex(decodedAddress); // a SS58 public key\n    console.log(\"decondedAddressHex\", decondedAddressHex);\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: TURING_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  createPool = async (account) => {\n    return new Promise(async (resolve) => {\n      await this.mangata.createPool(\n        account,\n        '0',\n        new BN('1000000000000000000000'), // 1000 MGX (MGX is 18 decimals)\n        '7',\n        new BN('1000000000000'), // 1 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(result);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n            }\n          },\n        }\n      );\n    });\n  }\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n};\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668795161468},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(async resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    const unsub = await newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        unsub();\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwidW5zdWIiLCJzaWduQW5kU2VuZCIsIm5vbmNlIiwic3RhdHVzIiwiZGlzcGF0Y2hFcnJvciIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiYXNGaW5hbGl6ZWQiLCJ0b1N0cmluZyIsIl8iLCJpc05pbCIsImlzTW9kdWxlIiwibWV0YUVycm9yIiwicmVnaXN0cnkiLCJmaW5kTWV0YUVycm9yIiwiYXNNb2R1bGUiLCJkb2NzIiwibmFtZSIsInNlY3Rpb24iLCJkaXNwYXRjaEVycm9yTWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJNc2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWthc2EvQ29kZS94Y20tZGVtby94Y21wX2F1dG9tYXRpb24vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRjb25zdCB1bnN1YiA9IGF3YWl0IG5ld0V4dHJpbnNpYy5zaWduQW5kU2VuZChrZXlQYWlyLCB7IG5vbmNlOiAtMSB9LCAoeyBzdGF0dXMsIGRpc3BhdGNoRXJyb3IgfSkgPT4ge1xuXHRcdFx0aWYgKHN0YXR1cy50eXBlID09PSAnRmluYWxpemVkJykge1xuICAgICAgICBjb25zb2xlLmxvZygnRmluYWxpemUgZXh0cmluc2ljIGluIGJsb2NrOiAnLCBzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cblx0XHRcdFx0aWYgKCFfLmlzTmlsKGRpc3BhdGNoRXJyb3IpKSB7XG5cdFx0XHRcdFx0aWYgKGRpc3BhdGNoRXJyb3IuaXNNb2R1bGUpIHtcblx0XHRcdFx0XHRcdGNvbnN0IG1ldGFFcnJvciA9IGFwaS5yZWdpc3RyeS5maW5kTWV0YUVycm9yKGRpc3BhdGNoRXJyb3IuYXNNb2R1bGUpXG5cdFx0XHRcdFx0XHRjb25zdCB7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSA9IG1ldGFFcnJvclxuXHRcdFx0XHRcdFx0Y29uc3QgZGlzcGF0Y2hFcnJvck1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSlcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvck1lc3NhZ2V9YFxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyTXNnKVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJNc2cgPSBgVHJhbnNhY3Rpb24gZmluYWxpemVkIHdpdGggZXJyb3IgYnkgYmxvY2tjaGFpbiAke2Rpc3BhdGNoRXJyb3IudG9TdHJpbmcoKX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dW5zdWIoKTtcblx0XHRcdFx0cmVzb2x2ZShzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFBdUI7QUFFaEIsTUFBTUEsYUFBYSxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUU7RUFBRUMsTUFBTSxHQUFHO0FBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLO0VBQ3hGLE9BQU8sSUFBSUMsT0FBTyxDQUFDLE1BQU9DLE9BQU8sSUFBSztJQUVuQyxNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RSxNQUFNUSxLQUFLLEdBQUcsTUFBTUgsWUFBWSxDQUFDSSxXQUFXLENBQUNSLE9BQU8sRUFBRTtNQUFFUyxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDbkcsSUFBSUQsTUFBTSxDQUFDRSxJQUFJLEtBQUssV0FBVyxFQUFFO1FBQzVCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRUosTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO1FBRS9FLElBQUksQ0FBQ0MsZUFBQyxDQUFDQyxLQUFLLENBQUNQLGFBQWEsQ0FBQyxFQUFFO1VBQzVCLElBQUlBLGFBQWEsQ0FBQ1EsUUFBUSxFQUFFO1lBQzNCLE1BQU1DLFNBQVMsR0FBR3RCLEdBQUcsQ0FBQ3VCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDWCxhQUFhLENBQUNZLFFBQVEsQ0FBQztZQUNwRSxNQUFNO2NBQUVDLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsR0FBR04sU0FBUztZQUN6QyxNQUFNTyxvQkFBb0IsR0FBR0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7Y0FBRUwsSUFBSTtjQUFFQyxJQUFJO2NBQUVDO1lBQVEsQ0FBQyxDQUFDO1lBQ3BFLE1BQU1JLE1BQU0sR0FBSSxrREFBaURILG9CQUFxQixFQUFDO1lBQ3ZGZCxPQUFPLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQU0sQ0FBQztVQUNwQixDQUFDLE1BQU07WUFDTixNQUFNQSxNQUFNLEdBQUksa0RBQWlEbkIsYUFBYSxDQUFDSyxRQUFRLEVBQUcsRUFBQztZQUMzRkgsT0FBTyxDQUFDQyxHQUFHLENBQUNnQixNQUFNLENBQUM7VUFDcEI7UUFDRDtRQUVBdkIsS0FBSyxFQUFFO1FBQ1BKLE9BQU8sQ0FBQ08sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","unsub","signAndSend","nonce","status","dispatchError","type","console","log","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise(async (resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tconst unsub = await newExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tif (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tunsub();\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IAEnC,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvE,MAAMQ,KAAK,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACR,OAAO,EAAE;MAAES,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MACnG,IAAID,MAAM,CAACE,IAAI,KAAK,WAAW,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE/E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGtB,GAAG,CAACuB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFd,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FH,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB;QACD;QAEAvB,KAAK,EAAE;QACPJ,OAAO,CAACO,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668808911630},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"filename\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo/xcmp_automation\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(async resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    const unsub = await newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        unsub();\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwidW5zdWIiLCJzaWduQW5kU2VuZCIsIm5vbmNlIiwic3RhdHVzIiwiZGlzcGF0Y2hFcnJvciIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiYXNGaW5hbGl6ZWQiLCJ0b1N0cmluZyIsIl8iLCJpc05pbCIsImlzTW9kdWxlIiwibWV0YUVycm9yIiwicmVnaXN0cnkiLCJmaW5kTWV0YUVycm9yIiwiYXNNb2R1bGUiLCJkb2NzIiwibmFtZSIsInNlY3Rpb24iLCJkaXNwYXRjaEVycm9yTWVzc2FnZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJNc2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWthc2EvQ29kZS94Y20tZGVtby94Y21wX2F1dG9tYXRpb24vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRjb25zdCB1bnN1YiA9IGF3YWl0IG5ld0V4dHJpbnNpYy5zaWduQW5kU2VuZChrZXlQYWlyLCB7IG5vbmNlOiAtMSB9LCAoeyBzdGF0dXMsIGRpc3BhdGNoRXJyb3IgfSkgPT4ge1xuXHRcdFx0aWYgKHN0YXR1cy50eXBlID09PSAnRmluYWxpemVkJykge1xuICAgICAgICBjb25zb2xlLmxvZygnRmluYWxpemUgZXh0cmluc2ljIGluIGJsb2NrOiAnLCBzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cblx0XHRcdFx0aWYgKCFfLmlzTmlsKGRpc3BhdGNoRXJyb3IpKSB7XG5cdFx0XHRcdFx0aWYgKGRpc3BhdGNoRXJyb3IuaXNNb2R1bGUpIHtcblx0XHRcdFx0XHRcdGNvbnN0IG1ldGFFcnJvciA9IGFwaS5yZWdpc3RyeS5maW5kTWV0YUVycm9yKGRpc3BhdGNoRXJyb3IuYXNNb2R1bGUpXG5cdFx0XHRcdFx0XHRjb25zdCB7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSA9IG1ldGFFcnJvclxuXHRcdFx0XHRcdFx0Y29uc3QgZGlzcGF0Y2hFcnJvck1lc3NhZ2UgPSBKU09OLnN0cmluZ2lmeSh7IGRvY3MsIG5hbWUsIHNlY3Rpb24gfSlcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvck1lc3NhZ2V9YFxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyTXNnKVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb25zdCBlcnJNc2cgPSBgVHJhbnNhY3Rpb24gZmluYWxpemVkIHdpdGggZXJyb3IgYnkgYmxvY2tjaGFpbiAke2Rpc3BhdGNoRXJyb3IudG9TdHJpbmcoKX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dW5zdWIoKTtcblx0XHRcdFx0cmVzb2x2ZShzdGF0dXMuYXNGaW5hbGl6ZWQudG9TdHJpbmcoKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFBdUI7QUFFaEIsTUFBTUEsYUFBYSxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsU0FBUyxFQUFFQyxPQUFPLEVBQUU7RUFBRUMsTUFBTSxHQUFHO0FBQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLO0VBQ3hGLE9BQU8sSUFBSUMsT0FBTyxDQUFDLE1BQU9DLE9BQU8sSUFBSztJQUVuQyxNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RSxNQUFNUSxLQUFLLEdBQUcsTUFBTUgsWUFBWSxDQUFDSSxXQUFXLENBQUNSLE9BQU8sRUFBRTtNQUFFUyxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDbkcsSUFBSUQsTUFBTSxDQUFDRSxJQUFJLEtBQUssV0FBVyxFQUFFO1FBQzVCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsRUFBRUosTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO1FBRS9FLElBQUksQ0FBQ0MsZUFBQyxDQUFDQyxLQUFLLENBQUNQLGFBQWEsQ0FBQyxFQUFFO1VBQzVCLElBQUlBLGFBQWEsQ0FBQ1EsUUFBUSxFQUFFO1lBQzNCLE1BQU1DLFNBQVMsR0FBR3RCLEdBQUcsQ0FBQ3VCLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDWCxhQUFhLENBQUNZLFFBQVEsQ0FBQztZQUNwRSxNQUFNO2NBQUVDLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsR0FBR04sU0FBUztZQUN6QyxNQUFNTyxvQkFBb0IsR0FBR0MsSUFBSSxDQUFDQyxTQUFTLENBQUM7Y0FBRUwsSUFBSTtjQUFFQyxJQUFJO2NBQUVDO1lBQVEsQ0FBQyxDQUFDO1lBQ3BFLE1BQU1JLE1BQU0sR0FBSSxrREFBaURILG9CQUFxQixFQUFDO1lBQ3ZGZCxPQUFPLENBQUNDLEdBQUcsQ0FBQ2dCLE1BQU0sQ0FBQztVQUNwQixDQUFDLE1BQU07WUFDTixNQUFNQSxNQUFNLEdBQUksa0RBQWlEbkIsYUFBYSxDQUFDSyxRQUFRLEVBQUcsRUFBQztZQUMzRkgsT0FBTyxDQUFDQyxHQUFHLENBQUNnQixNQUFNLENBQUM7VUFDcEI7UUFDRDtRQUVBdkIsS0FBSyxFQUFFO1FBQ1BKLE9BQU8sQ0FBQ08sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","unsub","signAndSend","nonce","status","dispatchError","type","console","log","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/xcmp_automation/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise(async (resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tconst unsub = await newExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tif (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tunsub();\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAC,MAAOC,OAAO,IAAK;IAEnC,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvE,MAAMQ,KAAK,GAAG,MAAMH,YAAY,CAACI,WAAW,CAACR,OAAO,EAAE;MAAES,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MACnG,IAAID,MAAM,CAACE,IAAI,KAAK,WAAW,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE/E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGtB,GAAG,CAACuB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFd,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FH,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;UACpB;QACD;QAEAvB,KAAK,EAAE;QACPJ,OAAO,CAACO,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668808911630},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/setup.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nrequire(\"@imstar15/api-augment\");\nvar _api = require(\"@polkadot/api\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _turingHelper = _interopRequireDefault(require(\"./common/turingHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./common/mangataHelper\"));\nvar _account = _interopRequireDefault(require(\"./common/account\"));\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _utils = require(\"./common/utils\");\nvar _constants = require(\"./common/constants\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst TURING_PARA_ID = process.env.TURING_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new _api.Keyring();\n\n/*** Main entrance of the program */\n(async function main() {\n  await (0, _utilCrypto.cryptoWaitReady)();\n  console.log(\"Initializing APIs of both chains ...\");\n  await _turingHelper.default.initialize(TURING_ENDPOINT);\n  await _mangataHelper.default.initialize(MANGATA_ENDPOINT);\n  console.log(\"Reading token and balance of Alice and Bob accounts ...\");\n  const alice = new _account.default(\"Alice\");\n  await alice.init();\n  alice.print();\n  console.log(\"Minting tokens for Alice on Maganta if balance is zero ...\");\n  const mangataAddress = alice.assets[1].address;\n  const promises = _lodash.default.map(alice.assets[1].tokens, token => {\n    const {\n      symbol,\n      balance\n    } = token;\n    if (balance.isZero()) {\n      console.log(`[Alice] ${symbol} balance on Mangata is zero; minting ${symbol} with sudo ...`);\n      return _mangataHelper.default.mintToken(mangataAddress, symbol, alice.keyring);\n    } else {\n      return Promise.resolve();\n    }\n  });\n  await Promise.all(promises);\n\n  // Create pool\n  const pools = await _mangataHelper.default.getPools();\n  console.log('Pools: ', pools);\n  const existingPool = _lodash.default.find(pools, pool => {\n    return pool.firstTokenId === _mangataHelper.default.getTokenIdBySymbol(\"MGR\") && pool.secondTokenId === _mangataHelper.default.getTokenIdBySymbol(\"TUR\");\n  });\n  if (_lodash.default.isUndefined(existingPool)) {\n    console.log(`No MGR-TUR pool found; creating a MGR-TUR pool with Alice ...`);\n    await _mangataHelper.default.createPool(\"MGR\", \"TUR\", alice.keyring);\n  } else {\n    console.log(`An existing MGR-TUR pool found; skip pool creation ...`);\n  }\n\n  // Promote pool\n  console.log('Promote pool...');\n  const promotePoolExtrinsic = _mangataHelper.default.api.tx.xyk.promotePool(pools[0].liquidityTokenId);\n  await (0, _utils.sendExtrinsic)(_mangataHelper.default.api, promotePoolExtrinsic, alice.keyring, {\n    isSudo: true\n  });\n\n  // Buy asset\n  console.log('Buy asset...');\n  await _mangataHelper.default.mangata.buyAsset(alice.keyring, '0', '7', new _bn.default('1000000000000'), new _bn.default('100000000000000000000000000'));\n\n  // '8': {\n  //     id: '8',\n  //     chainId: 0,\n  //     decimals: 18,\n  //     name: 'Liquidity Pool Token',\n  //     symbol: 'MGR-TUR',\n  //     address: ''\n  //   }\n\n  // await mangataHelper.mangata.transferToken(\n  //     account, \n  //     '4', // TokenID 4 is KSM\n  //     account.address, \n  //     new BN(100000000000000), // 100 KSM (KSM is 12 decimals)\n  //     {\n  //         statusCallback: (result) => {\n  //           // result is of the form ISubmittableResult\n  //           console.log(result)\n  //         },\n  //         extrinsicStatus: (result) => {\n  //           // result is of the form MangataGenericEvent[]\n  //           for (let index = 0; index < result.length; index++) {\n  //               console.log('Phase', result[index].phase.toString())\n  //               console.log('Section', result[index].section)\n  //               console.log('Method', result[index].method)\n  //               console.log('Documentation', result[index].metaDocumentation)\n  //             }\n  //         },\n  //       }\n  // )\n\n  //   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n  //   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n  //   mangataHelper.addProxy(proxyAccount, keyPair);\n  //   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n  //   await turingHelper.xcmSend(dest, message);\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["SUBSTRATE_SS58","TURING_SS58","MANGATA_SS58","TURING_PARA_ID","process","env","MANGATA_PARA_ID","TURING_ENDPOINT","MANGATA_ENDPOINT","keyring","Keyring","main","cryptoWaitReady","console","log","turingHelper","initialize","mangataHelper","alice","Account","init","print","mangataAddress","assets","address","promises","_","map","tokens","token","symbol","balance","isZero","mintToken","Promise","resolve","all","pools","getPools","existingPool","find","pool","firstTokenId","getTokenIdBySymbol","secondTokenId","isUndefined","createPool","promotePoolExtrinsic","api","tx","xyk","promotePool","liquidityTokenId","sendExtrinsic","isSudo","mangata","buyAsset","BN","message"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/","sources":["setup.js"],"sourcesContent":["import \"@imstar15/api-augment\";\nimport { Keyring } from \"@polkadot/api\";\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\nimport turingHelper from \"./common/turingHelper\";\nimport mangataHelper from \"./common/mangataHelper\";\nimport Account from './common/account';\nimport _ from 'lodash';\nimport BN from 'bn.js';\nimport { Mangata } from \"@mangata-finance/sdk\";\nimport { sendExtrinsic } from \"./common/utils\";\nimport {chainConfig} from './common/constants';\n\nconst SUBSTRATE_SS58 = 42;\nconst TURING_SS58 = 51;\nconst MANGATA_SS58 = 42;\nconst TURING_PARA_ID = process.env.TURING_PARA_ID;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst TURING_ENDPOINT = process.env.TURING_ENDPOINT;\nconst MANGATA_ENDPOINT = process.env.MANGATA_ENDPOINT;\n\n// const OAK_SOV_ACCOUNT = \"68kxzikS2WZNkYSPWdYouqH5sEZujecVCy3TFt9xHWB5MDG5\";\nconst keyring = new Keyring();\n\n/*** Main entrance of the program */\n(async function main () {\n  await cryptoWaitReady();\n\n    console.log(\"Initializing APIs of both chains ...\");\n    await turingHelper.initialize(TURING_ENDPOINT);\n    await mangataHelper.initialize(MANGATA_ENDPOINT);\n\n  console.log(\"Reading token and balance of Alice and Bob accounts ...\");\n  const alice = new Account(\"Alice\");\n  await alice.init();\n  alice.print();\n\n  console.log(\"Minting tokens for Alice on Maganta if balance is zero ...\");\n  const mangataAddress = alice.assets[1].address;\n  const promises = _.map(alice.assets[1].tokens, (token)=>{\n    const {symbol, balance} = token;\n\n    if(balance.isZero()){\n      console.log(`[Alice] ${symbol} balance on Mangata is zero; minting ${symbol} with sudo ...`);\n      return mangataHelper.mintToken(mangataAddress, symbol, alice.keyring);\n    }else{\n      return Promise.resolve();\n    }\n  });\n\n  await Promise.all(promises);\n\n  // Create pool\n  const pools = await mangataHelper.getPools();\n\tconsole.log('Pools: ', pools);\n\n  const existingPool = _.find(pools, (pool)=>{\n    return pool.firstTokenId === mangataHelper.getTokenIdBySymbol(\"MGR\") && pool.secondTokenId === mangataHelper.getTokenIdBySymbol(\"TUR\");\n  });\n\n  if(_.isUndefined(existingPool))\n  {\n    console.log(`No MGR-TUR pool found; creating a MGR-TUR pool with Alice ...`);\n    await mangataHelper.createPool(\"MGR\" ,\"TUR\",alice.keyring);\n  }else{\n    console.log(`An existing MGR-TUR pool found; skip pool creation ...`);\n  }\n\n  // Promote pool\n\tconsole.log('Promote pool...');\n\tconst promotePoolExtrinsic = mangataHelper.api.tx.xyk.promotePool(pools[0].liquidityTokenId);\n\tawait sendExtrinsic(mangataHelper.api, promotePoolExtrinsic, alice.keyring, { isSudo: true });\n\n\t// Buy asset\n\tconsole.log('Buy asset...');\n\tawait mangataHelper.mangata.buyAsset(alice.keyring, '0', '7', new BN('1000000000000'), new BN('100000000000000000000000000'));\n\n    // '8': {\n    //     id: '8',\n    //     chainId: 0,\n    //     decimals: 18,\n    //     name: 'Liquidity Pool Token',\n    //     symbol: 'MGR-TUR',\n    //     address: ''\n    //   }\n\n    // await mangataHelper.mangata.transferToken(\n    //     account, \n    //     '4', // TokenID 4 is KSM\n    //     account.address, \n    //     new BN(100000000000000), // 100 KSM (KSM is 12 decimals)\n    //     {\n    //         statusCallback: (result) => {\n    //           // result is of the form ISubmittableResult\n    //           console.log(result)\n    //         },\n    //         extrinsicStatus: (result) => {\n    //           // result is of the form MangataGenericEvent[]\n    //           for (let index = 0; index < result.length; index++) {\n    //               console.log('Phase', result[index].phase.toString())\n    //               console.log('Section', result[index].section)\n    //               console.log('Method', result[index].method)\n    //               console.log('Documentation', result[index].metaDocumentation)\n    //             }\n    //         },\n    //       }\n    // )\n\n//   const proxyAccount = mangataHelper.getProxyAddressMangata(keyPair.address);\n//   console.log(\"proxy account:\", keyring.encodeAddress(proxyAccount, SUBSTRATE_SS58));\n\n//   mangataHelper.addProxy(proxyAccount, keyPair);\n//   console.log('Add proxy on mangata successfully!');\n\n  const message = \"empty\";\n//   await turingHelper.xcmSend(dest, message);\n})();"],"mappings":"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"}},"mtime":1668991612101},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/turingHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass TuringHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getBalance = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    return balance;\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\nvar _default = new TuringHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","TuringHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getBalance","address","data","balance","query","system","account","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["turingHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass TuringHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getBalance = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    return balance;\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n}\n\nexport default new TuringHelper();"],"mappings":"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"}},"mtime":1668986832751},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n    const assetsResp = await this.mangata.getAssetsInfo();\n    this.assets = _lodash.default.values(_lodash.default.filter(assetsResp, asset => !_lodash.default.isEmpty(asset.symbol)));\n    console.log(\"Assets on Mangata chain: \", this.assets);\n    /**\n    [\n      {\"id\":\"0\",\"chainId\":0,\"decimals\":18,\"name\":\"Mangata\",\"symbol\":\"MGR\",\"address\":\"\"},\n      {\"id\":\"4\",\"chainId\":0,\"decimals\":12,\"name\":\"Rococo  Native\",\"symbol\":\"ROC\",\"address\":\"\"},\n      {\"id\":\"7\",\"chainId\":0,\"decimals\":10,\"name\":\"Turing native token\",\"symbol\":\"TUR\",\"address\":\"\"}\n    ]\n     */\n  };\n\n  getBalance = async (symbol, address) => {\n    const tokenId = _lodash.default.find(this.assets, {\n      symbol\n    }).id;\n    const balance = await this.mangata.getTokenBalance(tokenId, address);\n    return balance;\n  };\n  getTokenIdBySymbol(symbol) {\n    const tokenId = _lodash.default.find(this.assets, {\n      symbol\n    }).id;\n    return tokenId;\n  }\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address); // An Int array presentation of the address’ ss58 public key\n\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: TURING_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  mintToken = async (address, symbol, keyring, amount = 5000000000000000) => {\n    const tokenId = _lodash.default.find(this.assets, {\n      symbol\n    }).id;\n    const mintTokenExtrinsic = this.api.tx.tokens.mint(tokenId, address, amount);\n    await (0, _utils.sendExtrinsic)(this.api, mintTokenExtrinsic, keyring, {\n      isSudo: true\n    });\n  };\n  createPool = async (firstSymbol, secondSymbol, keyring) => {\n    const firstTokenId = _lodash.default.find(this.assets, {\n      symbol: firstSymbol\n    }).id;\n    const secondTokenId = _lodash.default.find(this.assets, {\n      symbol: secondSymbol\n    }).id;\n    return new Promise(resolve => {\n      this.mangata.createPool(keyring, firstTokenId.toString(), new _bn.default('10000000000000000000000'),\n      // 10000 MGR (MGR is 18 decimals)\n      secondTokenId.toString(), new _bn.default('100000000000000'),\n      // 100 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(\"call back result\", result);\n          console.log(\"call back result type\", result.status.type);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","assetsResp","getAssetsInfo","assets","_","values","filter","asset","isEmpty","symbol","console","log","getBalance","address","tokenId","find","id","balance","getTokenBalance","getTokenIdBySymbol","getProxyAccount","decodedAddress","decodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","u8aToHex","multilocation","createType","toString","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","mintToken","keyring","amount","mintTokenExtrinsic","tokens","mint","sendExtrinsic","isSudo","createPool","firstSymbol","secondSymbol","firstTokenId","secondTokenId","Promise","resolve","BN","statusCallback","result","status","type","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\nimport _ from \"lodash\";\nimport { sendExtrinsic } from './utils';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n\n    const assetsResp = await this.mangata.getAssetsInfo();\n    this.assets=_.values(_.filter(assetsResp, asset=> !_.isEmpty(asset.symbol)));\n    console.log(\"Assets on Mangata chain: \", this.assets);\n    /**\n    [\n      {\"id\":\"0\",\"chainId\":0,\"decimals\":18,\"name\":\"Mangata\",\"symbol\":\"MGR\",\"address\":\"\"},\n      {\"id\":\"4\",\"chainId\":0,\"decimals\":12,\"name\":\"Rococo  Native\",\"symbol\":\"ROC\",\"address\":\"\"},\n      {\"id\":\"7\",\"chainId\":0,\"decimals\":10,\"name\":\"Turing native token\",\"symbol\":\"TUR\",\"address\":\"\"}\n    ]\n     */\n  }\n\n  getBalance = async (symbol, address ) => {\n    const tokenId = (_.find(this.assets, {symbol})).id;\n    const balance = await this.mangata.getTokenBalance(tokenId, address);\n    return balance;\n  }\n\n  getTokenIdBySymbol(symbol) {\n    const tokenId = (_.find(this.assets, {symbol})).id;\n    return tokenId;\n  }\n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address); // An Int array presentation of the address’ ss58 public key\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: TURING_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  mintToken = async(address, symbol, keyring, amount=5000000000000000)=>{\n    const tokenId = (_.find(this.assets, {symbol})).id;\n    const mintTokenExtrinsic = this.api.tx.tokens.mint(tokenId, address, amount);\n    await sendExtrinsic(this.api, mintTokenExtrinsic, keyring, { isSudo: true });\n  }\n\n  createPool = async (firstSymbol, secondSymbol, keyring) => {\n    const firstTokenId = (_.find(this.assets, {symbol: firstSymbol})).id;\n    const secondTokenId = (_.find(this.assets, {symbol: secondSymbol})).id;\n\n    return new Promise((resolve) => {\n      this.mangata.createPool(\n        keyring,\n        firstTokenId.toString(),\n        new BN('10000000000000000000000'), // 10000 MGR (MGR is 18 decimals)\n        secondTokenId.toString(),\n        new BN('100000000000000'), // 100 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(\"call back result\", result);\n            console.log(\"call back result type\", result.status.type);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n                }\n          },\n        }\n      );\n    });\n  }\n\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n}\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668991036973},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      console.log(\"status\", status);\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwic2lnbkFuZFNlbmQiLCJub25jZSIsInN0YXR1cyIsImRpc3BhdGNoRXJyb3IiLCJjb25zb2xlIiwibG9nIiwidHlwZSIsImFzRmluYWxpemVkIiwidG9TdHJpbmciLCJfIiwiaXNOaWwiLCJpc01vZHVsZSIsIm1ldGFFcnJvciIsInJlZ2lzdHJ5IiwiZmluZE1ldGFFcnJvciIsImFzTW9kdWxlIiwiZG9jcyIsIm5hbWUiLCJzZWN0aW9uIiwiZGlzcGF0Y2hFcnJvck1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyTXNnIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvbWlrYXNhL0NvZGUveGNtLWRlbW8vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRuZXdFeHRyaW5zaWMuc2lnbkFuZFNlbmQoa2V5UGFpciwgeyBub25jZTogLTEgfSwgKHsgc3RhdHVzLCBkaXNwYXRjaEVycm9yIH0pID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKFwic3RhdHVzXCIsIHN0YXR1cyk7XG5cdFx0XHRpZiAoc3RhdHVzLnR5cGUgPT09ICdGaW5hbGl6ZWQnKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdGaW5hbGl6ZSBleHRyaW5zaWMgaW4gYmxvY2s6ICcsIHN0YXR1cy5hc0ZpbmFsaXplZC50b1N0cmluZygpKTtcblxuXHRcdFx0XHRpZiAoIV8uaXNOaWwoZGlzcGF0Y2hFcnJvcikpIHtcblx0XHRcdFx0XHRpZiAoZGlzcGF0Y2hFcnJvci5pc01vZHVsZSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgbWV0YUVycm9yID0gYXBpLnJlZ2lzdHJ5LmZpbmRNZXRhRXJyb3IoZGlzcGF0Y2hFcnJvci5hc01vZHVsZSlcblx0XHRcdFx0XHRcdGNvbnN0IHsgZG9jcywgbmFtZSwgc2VjdGlvbiB9ID0gbWV0YUVycm9yXG5cdFx0XHRcdFx0XHRjb25zdCBkaXNwYXRjaEVycm9yTWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KHsgZG9jcywgbmFtZSwgc2VjdGlvbiB9KVxuXHRcdFx0XHRcdFx0Y29uc3QgZXJyTXNnID0gYFRyYW5zYWN0aW9uIGZpbmFsaXplZCB3aXRoIGVycm9yIGJ5IGJsb2NrY2hhaW4gJHtkaXNwYXRjaEVycm9yTWVzc2FnZX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvci50b1N0cmluZygpfWBcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGVyck1zZylcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXNvbHZlKHN0YXR1cy5hc0ZpbmFsaXplZC50b1N0cmluZygpKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fSk7XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUF1QjtBQUVoQixNQUFNQSxhQUFhLEdBQUcsT0FBT0MsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRTtFQUFFQyxNQUFNLEdBQUc7QUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUs7RUFDeEYsT0FBTyxJQUFJQyxPQUFPLENBQUVDLE9BQU8sSUFBSztJQUU3QixNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RUssWUFBWSxDQUFDRyxXQUFXLENBQUNQLE9BQU8sRUFBRTtNQUFFUSxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDL0VDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsRUFBRUgsTUFBTSxDQUFDO01BQzdCLElBQUlBLE1BQU0sQ0FBQ0ksSUFBSSxLQUFLLFdBQVcsRUFBRTtRQUNoQ0YsT0FBTyxDQUFDQyxHQUFHLENBQUMsK0JBQStCLEVBQUVILE1BQU0sQ0FBQ0ssV0FBVyxDQUFDQyxRQUFRLEVBQUUsQ0FBQztRQUUzRSxJQUFJLENBQUNDLGVBQUMsQ0FBQ0MsS0FBSyxDQUFDUCxhQUFhLENBQUMsRUFBRTtVQUM1QixJQUFJQSxhQUFhLENBQUNRLFFBQVEsRUFBRTtZQUMzQixNQUFNQyxTQUFTLEdBQUdyQixHQUFHLENBQUNzQixRQUFRLENBQUNDLGFBQWEsQ0FBQ1gsYUFBYSxDQUFDWSxRQUFRLENBQUM7WUFDcEUsTUFBTTtjQUFFQyxJQUFJO2NBQUVDLElBQUk7Y0FBRUM7WUFBUSxDQUFDLEdBQUdOLFNBQVM7WUFDekMsTUFBTU8sb0JBQW9CLEdBQUdDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO2NBQUVMLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsQ0FBQztZQUNwRSxNQUFNSSxNQUFNLEdBQUksa0RBQWlESCxvQkFBcUIsRUFBQztZQUN2RmYsT0FBTyxDQUFDQyxHQUFHLENBQUNpQixNQUFNLENBQUM7VUFDcEIsQ0FBQyxNQUFNO1lBQ04sTUFBTUEsTUFBTSxHQUFJLGtEQUFpRG5CLGFBQWEsQ0FBQ0ssUUFBUSxFQUFHLEVBQUM7WUFDM0ZKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDaUIsTUFBTSxDQUFDO1VBQ3BCO1FBQ0Q7UUFFQTFCLE9BQU8sQ0FBQ00sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","signAndSend","nonce","status","dispatchError","console","log","type","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise((resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tnewExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tconsole.log(\"status\", status);\n\t\t\tif (status.type === 'Finalized') {\n\t\t\t\tconsole.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAE7B,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvEK,YAAY,CAACG,WAAW,CAACP,OAAO,EAAE;MAAEQ,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MAC/EC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC;MAC7B,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;QAChCF,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE3E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGrB,GAAG,CAACsB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFf,OAAO,CAACC,GAAG,CAACiB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FJ,OAAO,CAACC,GAAG,CAACiB,MAAM,CAAC;UACpB;QACD;QAEA1B,OAAO,CAACM,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668989758849},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/constants.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tokenConfig = exports.chainConfig = void 0;\nconst chainConfig = {\n  \"rococo\": {\n    ss58: 42\n  },\n  \"turing\": {\n    ss58: 51\n  },\n  \"mangata\": {\n    ss58: 42\n  }\n};\nexports.chainConfig = chainConfig;\nconst tokenConfig = {\n  MGR: {\n    decimal: '1000000000000000000'\n  },\n  ROC: {\n    decimal: '1000000000000'\n  },\n  TUR: {\n    decimal: '10000000000'\n  },\n  \"MGR-TUR\": {\n    decimal: '1000000000000000000'\n  }\n};\nexports.tokenConfig = tokenConfig;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpbkNvbmZpZyIsInNzNTgiLCJ0b2tlbkNvbmZpZyIsIk1HUiIsImRlY2ltYWwiLCJST0MiLCJUVVIiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9taWthc2EvQ29kZS94Y20tZGVtby9zcmMvY29tbW9uLyIsInNvdXJjZXMiOlsiY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNoYWluQ29uZmlnPXtcbiAgICBcInJvY29jb1wiOntcbiAgICAgICAgc3M1ODogNDIsXG4gICAgfSxcbiAgICBcInR1cmluZ1wiOntcbiAgICAgICAgc3M1ODo1MVxuICAgIH0sXG4gICAgXCJtYW5nYXRhXCI6e1xuICAgICAgICBzczU4OiA0MlxuICAgIH1cbn1cblxuY29uc3QgdG9rZW5Db25maWc9e1xuICAgIE1HUjoge1xuICAgICAgICBkZWNpbWFsOicxMDAwMDAwMDAwMDAwMDAwMDAwJ1xuICAgIH0sXG4gICAgUk9DOiB7XG4gICAgICAgIGRlY2ltYWw6ICcxMDAwMDAwMDAwMDAwJ1xuICAgIH0sXG4gICAgVFVSOiB7XG4gICAgICAgIGRlY2ltYWw6JzEwMDAwMDAwMDAwJ1xuICAgIH0sXG4gICAgXCJNR1ItVFVSXCI6IHtcbiAgICAgICAgZGVjaW1hbDonMTAwMDAwMDAwMDAwMDAwMDAwMCdcbiAgICB9XG59XG5cbmV4cG9ydCB7Y2hhaW5Db25maWcsIHRva2VuQ29uZmlnfTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFdBQVcsR0FBQztFQUNkLFFBQVEsRUFBQztJQUNMQyxJQUFJLEVBQUU7RUFDVixDQUFDO0VBQ0QsUUFBUSxFQUFDO0lBQ0xBLElBQUksRUFBQztFQUNULENBQUM7RUFDRCxTQUFTLEVBQUM7SUFDTkEsSUFBSSxFQUFFO0VBQ1Y7QUFDSixDQUFDO0FBQUE7QUFFRCxNQUFNQyxXQUFXLEdBQUM7RUFDZEMsR0FBRyxFQUFFO0lBQ0RDLE9BQU8sRUFBQztFQUNaLENBQUM7RUFDREMsR0FBRyxFQUFFO0lBQ0RELE9BQU8sRUFBRTtFQUNiLENBQUM7RUFDREUsR0FBRyxFQUFFO0lBQ0RGLE9BQU8sRUFBQztFQUNaLENBQUM7RUFDRCxTQUFTLEVBQUU7SUFDUEEsT0FBTyxFQUFDO0VBQ1o7QUFDSixDQUFDO0FBQUEifQ==","map":{"version":3,"names":["chainConfig","ss58","tokenConfig","MGR","decimal","ROC","TUR"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["constants.js"],"sourcesContent":["const chainConfig={\n    \"rococo\":{\n        ss58: 42,\n    },\n    \"turing\":{\n        ss58:51\n    },\n    \"mangata\":{\n        ss58: 42\n    }\n}\n\nconst tokenConfig={\n    MGR: {\n        decimal:'1000000000000000000'\n    },\n    ROC: {\n        decimal: '1000000000000'\n    },\n    TUR: {\n        decimal:'10000000000'\n    },\n    \"MGR-TUR\": {\n        decimal:'1000000000000000000'\n    }\n}\n\nexport {chainConfig, tokenConfig};"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAC;EACd,QAAQ,EAAC;IACLC,IAAI,EAAE;EACV,CAAC;EACD,QAAQ,EAAC;IACLA,IAAI,EAAC;EACT,CAAC;EACD,SAAS,EAAC;IACNA,IAAI,EAAE;EACV;AACJ,CAAC;AAAA;AAED,MAAMC,WAAW,GAAC;EACdC,GAAG,EAAE;IACDC,OAAO,EAAC;EACZ,CAAC;EACDC,GAAG,EAAE;IACDD,OAAO,EAAE;EACb,CAAC;EACDE,GAAG,EAAE;IACDF,OAAO,EAAC;EACZ,CAAC;EACD,SAAS,EAAE;IACPA,OAAO,EAAC;EACZ;AACJ,CAAC;AAAA"}},"mtime":1668990896582},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/turingHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _types = require(\"@imstar15/types\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass TuringHelper {\n  initialize = async endpoint => {\n    const api = await _api.ApiPromise.create({\n      provider: new _api.WsProvider(endpoint),\n      rpc: _types.rpc\n    });\n    this.api = api;\n  };\n  getApi = () => this.api;\n  getBalance = async address => {\n    // Retrieve the account balance & nonce via the system module\n    const {\n      data: balance\n    } = await this.api.query.system.account(address);\n    return balance;\n  };\n  getProxyAddressMangata = address => {\n    const keyring = new _api.Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [{\n          Parachain: MANGATA_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: keyring.decodeAddress(mangataAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const proxyAccount = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  };\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100,\n      // does not except negative?\n      runtimeVersion: this.api.runtimeVersion\n    });\n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  };\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\", dest, message);\n    return new Promise(async resolve => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async resolve => {\n      const unsub = await xcmpCall.signAndSend(keyPair, {\n        nonce: -1\n      }, async ({\n        status\n      }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n\n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  };\n}\nvar _default = new TuringHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_SS58","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","TuringHelper","initialize","endpoint","api","ApiPromise","create","provider","WsProvider","rpc","getApi","getBalance","address","data","balance","query","system","account","getProxyAddressMangata","keyring","Keyring","mangataAddress","encodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","id","decodeAddress","multilocation","createType","toHash","Uint8Array","TextEncoder","encode","toU8a","proxyAccount","u8aToHex","registry","hash","slice","getXcmFees","xcmpCall","fakeSignedXcmpCall","signFake","blockHash","genesisHash","nonce","runtimeVersion","fees","xcmpHandler","toHex","xcmSend","dest","message","console","log","Promise","resolve","unsub","tx","polkadotXcm","send","signAndSend","keyPair","status","isInBlock","asInBlock","type","sendXcmExtrinsic","taskId","task","automationTime","accountTasks","toHuman"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["turingHelper.js"],"sourcesContent":["import { rpc } from '@imstar15/types';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport BN from 'bn.js';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_SS58 = 42;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass TuringHelper {\n  initialize = async (endpoint) => {\n    const api = await ApiPromise.create({ provider: new WsProvider(endpoint), rpc });\n\t\tthis.api = api;\n  }\n\n  getApi = () => this.api;\n\n  getBalance = async(address)=>{\n    // Retrieve the account balance & nonce via the system module\n    const { data: balance } = await this.api.query.system.account(address);\n\n    return balance;\n  }\n\n  getProxyAddressMangata = (address) => {\n    const keyring = new Keyring();\n    const mangataAddress = keyring.encodeAddress(address, MANGATA_SS58);\n\n    const location = {\n      parents: 1,\n      interior: {\n        X2: [\n          { Parachain: MANGATA_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: keyring.decodeAddress(mangataAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const proxyAccount = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n    return proxyAccount;\n  }\n\n  /**\n   * Get XCM fees\n   * Fake sign the call in order to get the combined fees from Turing.\n   * Turing xcmpHandler_fees RPC requires the encoded call in this format.\n   * Fees returned include inclusion, all executions, and XCMP fees to run on Target Chain.\n   * @param {*} address \n   * @param {*} xcmpCall \n   * @returns \n   */\n  getXcmFees = async (address, xcmpCall) => {\n    const fakeSignedXcmpCall = xcmpCall.signFake(address, {\n      blockHash: this.api.genesisHash,\n      genesisHash: this.api.genesisHash,\n      nonce: 100, // does not except negative?\n      runtimeVersion: this.api.runtimeVersion,\n    });\n  \n    const fees = await this.api.rpc.xcmpHandler.fees(fakeSignedXcmpCall.toHex());\n    return fees;\n  }\n\n  xcmSend = async (dest, message) => {\n    console.log(\"xcmSend,\",dest,message);\n\n    return new Promise(async (resolve) => {\n      const unsub = await this.api.tx.polkadotXcm.send(dest, message).signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n}\n\n  sendXcmExtrinsic = async (xcmpCall, keyPair, taskId) => {\n    return new Promise(async (resolve) => {\n      const unsub = await xcmpCall.signAndSend(keyPair, { nonce: -1 }, async ({ status }) => {\n        if (status.isInBlock) {\n          console.log('Successful with hash ' + status.asInBlock.toHex());\n  \n          // Get Task\n          const task = await this.api.query.automationTime.accountTasks(keyPair.address, taskId);\n          console.log(\"Task:\", task.toHuman());\n  \n          unsub();\n          resolve();\n        } else {\n          console.log('Status: ' + status.type);\n        }\n      });\n    });\n  }\n}\n\nexport default new TuringHelper();"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAAuB;AAEvB,MAAMA,cAAc,GAAG,IAAI;AAC3B,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACF,eAAe;AAEnD,MAAMG,OAAO,GAAG;EACdC,GAAG,EAAE,qBAAqB;EAC1BC,GAAG,EAAE,eAAe;EACpBC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,YAAY,CAAC;EACjBC,UAAU,GAAG,MAAOC,QAAQ,IAAK;IAC/B,MAAMC,GAAG,GAAG,MAAMC,eAAU,CAACC,MAAM,CAAC;MAAEC,QAAQ,EAAE,IAAIC,eAAU,CAACL,QAAQ,CAAC;MAAEM,GAAG,EAAHA;IAAI,CAAC,CAAC;IAClF,IAAI,CAACL,GAAG,GAAGA,GAAG;EACd,CAAC;EAEDM,MAAM,GAAG,MAAM,IAAI,CAACN,GAAG;EAEvBO,UAAU,GAAG,MAAMC,OAAO,IAAG;IAC3B;IACA,MAAM;MAAEC,IAAI,EAAEC;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACV,GAAG,CAACW,KAAK,CAACC,MAAM,CAACC,OAAO,CAACL,OAAO,CAAC;IAEtE,OAAOE,OAAO;EAChB,CAAC;EAEDI,sBAAsB,GAAIN,OAAO,IAAK;IACpC,MAAMO,OAAO,GAAG,IAAIC,YAAO,EAAE;IAC7B,MAAMC,cAAc,GAAGF,OAAO,CAACG,aAAa,CAACV,OAAO,EAAEnB,YAAY,CAAC;IAEnE,MAAM8B,QAAQ,GAAG;MACfC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;QACRC,EAAE,EAAE,CACF;UAAEC,SAAS,EAAEjC;QAAgB,CAAC,EAC9B;UACEkC,WAAW,EAAE;YACXC,OAAO,EAAE,KAAK;YACdC,EAAE,EAAEX,OAAO,CAACY,aAAa,CAACV,cAAc;UAC1C;QACF,CAAC;MAEL;IACF,CAAC;IAED,MAAMW,aAAa,GAAG,IAAI,CAAC5B,GAAG,CAAC6B,UAAU,CAAC,oBAAoB,EAAEV,QAAQ,CAAC;IAEzE,MAAMW,MAAM,GAAG,IAAIC,UAAU,CAAC,CAC5B,GAAG,IAAIA,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,EACvB,GAAG,IAAIC,WAAW,EAAE,CAACC,MAAM,CAAC,UAAU,CAAC,EACvC,GAAGL,aAAa,CAACM,KAAK,EAAE,CACzB,CAAC;IAEF,MAAMC,YAAY,GAAG,IAAAC,cAAQ,EAAC,IAAI,CAACpC,GAAG,CAACqC,QAAQ,CAACC,IAAI,CAACR,MAAM,CAAC,CAACS,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,OAAOJ,YAAY;EACrB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEK,UAAU,GAAG,OAAOhC,OAAO,EAAEiC,QAAQ,KAAK;IACxC,MAAMC,kBAAkB,GAAGD,QAAQ,CAACE,QAAQ,CAACnC,OAAO,EAAE;MACpDoC,SAAS,EAAE,IAAI,CAAC5C,GAAG,CAAC6C,WAAW;MAC/BA,WAAW,EAAE,IAAI,CAAC7C,GAAG,CAAC6C,WAAW;MACjCC,KAAK,EAAE,GAAG;MAAE;MACZC,cAAc,EAAE,IAAI,CAAC/C,GAAG,CAAC+C;IAC3B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAM,IAAI,CAAChD,GAAG,CAACK,GAAG,CAAC4C,WAAW,CAACD,IAAI,CAACN,kBAAkB,CAACQ,KAAK,EAAE,CAAC;IAC5E,OAAOF,IAAI;EACb,CAAC;EAEDG,OAAO,GAAG,OAAOC,IAAI,EAAEC,OAAO,KAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACH,IAAI,EAACC,OAAO,CAAC;IAEpC,OAAO,IAAIG,OAAO,CAAC,MAAOC,OAAO,IAAK;MACpC,MAAMC,KAAK,GAAG,MAAM,IAAI,CAAC1D,GAAG,CAAC2D,EAAE,CAACC,WAAW,CAACC,IAAI,CAACT,IAAI,EAAEC,OAAO,CAAC,CAACS,WAAW,CAACC,OAAO,EAAE;QAAEjB,KAAK,EAAE,CAAC;MAAE,CAAC,EAAE,OAAO;QAAEkB;MAAO,CAAC,KAAK;QACxH,IAAIA,MAAM,CAACC,SAAS,EAAE;UACpBX,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGS,MAAM,CAACE,SAAS,CAAChB,KAAK,EAAE,CAAC;UAE/DQ,KAAK,EAAE;UACPD,OAAO,EAAE;QACX,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGS,MAAM,CAACG,IAAI,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAECC,gBAAgB,GAAG,OAAO3B,QAAQ,EAAEsB,OAAO,EAAEM,MAAM,KAAK;IACtD,OAAO,IAAIb,OAAO,CAAC,MAAOC,OAAO,IAAK;MACpC,MAAMC,KAAK,GAAG,MAAMjB,QAAQ,CAACqB,WAAW,CAACC,OAAO,EAAE;QAAEjB,KAAK,EAAE,CAAC;MAAE,CAAC,EAAE,OAAO;QAAEkB;MAAO,CAAC,KAAK;QACrF,IAAIA,MAAM,CAACC,SAAS,EAAE;UACpBX,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGS,MAAM,CAACE,SAAS,CAAChB,KAAK,EAAE,CAAC;;UAE/D;UACA,MAAMoB,IAAI,GAAG,MAAM,IAAI,CAACtE,GAAG,CAACW,KAAK,CAAC4D,cAAc,CAACC,YAAY,CAACT,OAAO,CAACvD,OAAO,EAAE6D,MAAM,CAAC;UACtFf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEe,IAAI,CAACG,OAAO,EAAE,CAAC;UAEpCf,KAAK,EAAE;UACPD,OAAO,EAAE;QACX,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGS,MAAM,CAACG,IAAI,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH;AAAC,eAEc,IAAItE,YAAY,EAAE;AAAA"}},"mtime":1668986832751},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/mangataHelper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass MangataHelper {\n  initialize = async mangataEndpoint => {\n    const mangata = _sdk.Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n    this.mangata = mangata;\n    this.api = mangataApi;\n    const assetsResp = await this.mangata.getAssetsInfo();\n    this.assets = _lodash.default.values(_lodash.default.filter(assetsResp, asset => !_lodash.default.isEmpty(asset.symbol)));\n    console.log(\"Assets on Mangata chain: \", this.assets);\n    /**\n    [\n      {\"id\":\"0\",\"chainId\":0,\"decimals\":18,\"name\":\"Mangata\",\"symbol\":\"MGR\",\"address\":\"\"},\n      {\"id\":\"4\",\"chainId\":0,\"decimals\":12,\"name\":\"Rococo  Native\",\"symbol\":\"ROC\",\"address\":\"\"},\n      {\"id\":\"7\",\"chainId\":0,\"decimals\":10,\"name\":\"Turing native token\",\"symbol\":\"TUR\",\"address\":\"\"}\n    ]\n     */\n  };\n\n  getBalance = async (symbol, address) => {\n    const tokenId = _lodash.default.find(this.assets, {\n      symbol\n    }).id;\n    const balance = await this.mangata.getTokenBalance(tokenId, address);\n    return balance;\n  };\n  getProxyAccount = address => {\n    const decodedAddress = (0, _utilCrypto.decodeAddress)(address); // An Int array presentation of the address’ ss58 public key\n\n    const location = {\n      parents: 1,\n      // From Turing to Mangata\n      interior: {\n        X2: [{\n          Parachain: TURING_PARA_ID\n        }, {\n          AccountId32: {\n            network: \"Any\",\n            id: (0, _util.u8aToHex)(decodedAddress)\n          }\n        }]\n      }\n    };\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n    console.log(\"multilocation\", multilocation.toString());\n    const toHash = new Uint8Array([...new Uint8Array([32]), ...new TextEncoder().encode(\"multiloc\"), ...multilocation.toU8a()]);\n    const DescendOriginAddress32 = (0, _util.u8aToHex)(this.api.registry.hash(toHash).slice(0, 32));\n    return DescendOriginAddress32;\n  };\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n  mintToken = async (address, symbol, keyring, amount = 5000000000000000) => {\n    const tokenId = _lodash.default.find(this.assets, {\n      symbol\n    }).id;\n    const mintTokenExtrinsic = this.api.tx.tokens.mint(tokenId, address, amount);\n    await (0, _utils.sendExtrinsic)(this.api, mintTokenExtrinsic, keyring, {\n      isSudo: true\n    });\n  };\n  createPool = async (firstSymbol, secondSymbol, keyring) => {\n    const firstTokenId = _lodash.default.find(this.assets, {\n      symbol: firstSymbol\n    }).id;\n    const secondTokenId = _lodash.default.find(this.assets, {\n      symbol: secondSymbol\n    }).id;\n    return new Promise(resolve => {\n      this.mangata.createPool(keyring, firstTokenId.toString(), new _bn.default('10000000000000000000000'),\n      // 10000 MGR (MGR is 18 decimals)\n      secondTokenId.toString(), new _bn.default('100000000000000'),\n      // 100 TUR (TUR is 12 decimals)\n      {\n        statusCallback: result => {\n          // result is of the form ISubmittableResult\n          console.log(\"call back result\", result);\n          console.log(\"call back result type\", result.status.type);\n        },\n        extrinsicStatus: result => {\n          // result is of the form MangataGenericEvent[]\n          for (let index = 0; index < result.length; index++) {\n            console.log('Phase', result[index].phase.toString());\n            console.log('Section', result[index].section);\n            console.log('Method', result[index].method);\n            console.log('Documentation', result[index].metaDocumentation);\n          }\n        }\n      });\n    });\n  };\n  getPools = async () => {\n    return this.mangata.getPools();\n  };\n}\nvar _default = new MangataHelper();\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","MangataHelper","initialize","mangataEndpoint","mangata","Mangata","getInstance","mangataApi","getApi","api","assetsResp","getAssetsInfo","assets","_","values","filter","asset","isEmpty","symbol","console","log","getBalance","address","tokenId","find","id","balance","getTokenBalance","getProxyAccount","decodedAddress","decodeAddress","location","parents","interior","X2","Parachain","AccountId32","network","u8aToHex","multilocation","createType","toString","toHash","Uint8Array","TextEncoder","encode","toU8a","DescendOriginAddress32","registry","hash","slice","addProxy","proxyAccount","keyPair","tx","proxy","signAndSend","createProxyCall","extrinsic","mintToken","keyring","amount","mintTokenExtrinsic","tokens","mint","sendExtrinsic","isSudo","createPool","firstSymbol","secondSymbol","firstTokenId","secondTokenId","Promise","resolve","BN","statusCallback","result","status","type","extrinsicStatus","index","length","phase","section","method","metaDocumentation","getPools"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["mangataHelper.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\nimport _ from \"lodash\";\nimport { sendExtrinsic } from './utils';\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\nclass MangataHelper {\n  initialize = async (mangataEndpoint) => {\n    const mangata = Mangata.getInstance([mangataEndpoint]);\n    const mangataApi = await mangata.getApi();\n\n    this.mangata = mangata;\n    this.api = mangataApi;\n\n    const assetsResp = await this.mangata.getAssetsInfo();\n    this.assets=_.values(_.filter(assetsResp, asset=> !_.isEmpty(asset.symbol)));\n    console.log(\"Assets on Mangata chain: \", this.assets);\n    /**\n    [\n      {\"id\":\"0\",\"chainId\":0,\"decimals\":18,\"name\":\"Mangata\",\"symbol\":\"MGR\",\"address\":\"\"},\n      {\"id\":\"4\",\"chainId\":0,\"decimals\":12,\"name\":\"Rococo  Native\",\"symbol\":\"ROC\",\"address\":\"\"},\n      {\"id\":\"7\",\"chainId\":0,\"decimals\":10,\"name\":\"Turing native token\",\"symbol\":\"TUR\",\"address\":\"\"}\n    ]\n     */\n  }\n\n  getBalance = async (symbol, address ) => {\n    const tokenId = (_.find(this.assets, {symbol})).id;\n    const balance = await this.mangata.getTokenBalance(tokenId, address);\n    return balance;\n  }\n\n  getProxyAccount = (address) => {\n    const decodedAddress = decodeAddress(address); // An Int array presentation of the address’ ss58 public key\n    \n    const location = {\n      parents: 1, // From Turing to Mangata\n      interior: {\n        X2: [\n          { Parachain: TURING_PARA_ID },\n          {\n            AccountId32: {\n              network: \"Any\",\n              id: u8aToHex(decodedAddress),\n            }\n          }\n        ]\n      }\n    };\n\n    const multilocation = this.api.createType(\"XcmV1MultiLocation\", location);\n\n    console.log(\"multilocation\", multilocation.toString());\n\n    const toHash = new Uint8Array([\n      ...new Uint8Array([32]),\n      ...new TextEncoder().encode(\"multiloc\"),\n      ...multilocation.toU8a(),\n    ]);\n\n    const DescendOriginAddress32 = u8aToHex(this.api.registry.hash(toHash).slice(0, 32));\n\n    return DescendOriginAddress32;\n  }\n\n  addProxy = async (proxyAccount, keyPair) => this.api.tx.proxy.addProxy(proxyAccount, \"Any\", 0).signAndSend(keyPair);\n\n  createProxyCall = async (address, extrinsic) => this.api.tx.proxy.proxy(address, 'Any', extrinsic);\n\n  mintToken = async(address, symbol, keyring, amount=5000000000000000)=>{\n    const tokenId = (_.find(this.assets, {symbol})).id;\n    const mintTokenExtrinsic = this.api.tx.tokens.mint(tokenId, address, amount);\n    await sendExtrinsic(this.api, mintTokenExtrinsic, keyring, { isSudo: true });\n  }\n\n  createPool = async (firstSymbol, secondSymbol, keyring) => {\n    const firstTokenId = (_.find(this.assets, {symbol: firstSymbol})).id;\n    const secondTokenId = (_.find(this.assets, {symbol: secondSymbol})).id;\n\n    return new Promise((resolve) => {\n      this.mangata.createPool(\n        keyring,\n        firstTokenId.toString(),\n        new BN('10000000000000000000000'), // 10000 MGR (MGR is 18 decimals)\n        secondTokenId.toString(),\n        new BN('100000000000000'), // 100 TUR (TUR is 12 decimals)\n        {\n          statusCallback: (result) => {\n            // result is of the form ISubmittableResult\n            console.log(\"call back result\", result);\n            console.log(\"call back result type\", result.status.type);\n          },\n          extrinsicStatus: (result) => {\n            // result is of the form MangataGenericEvent[]\n            for (let index = 0; index < result.length; index++) {\n                  console.log('Phase', result[index].phase.toString())\n                  console.log('Section', result[index].section)\n                  console.log('Method', result[index].method)\n                  console.log('Documentation', result[index].metaDocumentation)\n                }\n          },\n        }\n      );\n    });\n  }\n\n  getPools = async() =>{\n    return this.mangata.getPools();\n  }\n}\n\nexport default new MangataHelper();"],"mappings":"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"}},"mtime":1668990774230},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/account.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _turingHelper = _interopRequireDefault(require(\"./turingHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./mangataHelper\"));\nvar _constants = require(\"./constants\");\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _util2 = _interopRequireDefault(require(\"util\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass Account {\n  constructor(name) {\n    this.name = name;\n    const keyring = new _api.Keyring();\n    this.account = keyring.addFromUri(`//${name}`, undefined, 'sr25519');\n    this.publicKey = this.account.address;\n    const mangataAddress = keyring.encodeAddress(this.publicKey, _constants.chainConfig.mangata.ss58);\n    this.assets = [{\n      chain: \"rococo\",\n      address: keyring.encodeAddress(this.publicKey, _constants.chainConfig.rococo.ss58)\n    }, {\n      chain: \"mangata\",\n      address: mangataAddress,\n      proxyAddress: _mangataHelper.default.getProxyAccount(mangataAddress),\n      tokens: []\n    }, {\n      chain: \"turing\",\n      address: keyring.encodeAddress(this.publicKey, _constants.chainConfig.turing.ss58),\n      tokens: []\n    }];\n  }\n  async init() {\n    const mangataAssets = _lodash.default.find(this.assets, {\n      chain: \"mangata\"\n    });\n    console.log(\"mangataHelper.assets\", _mangataHelper.default.assets);\n    const balancePromises = _lodash.default.map(_mangataHelper.default.assets, async asset => {\n      const {\n        symbol\n      } = asset;\n      console.log(\"symbol\", symbol);\n      const mangataBalance = await _mangataHelper.default.getBalance(symbol, mangataAssets.address);\n      console.log(\"mangataBalance\", mangataBalance);\n      const decimal = _constants.tokenConfig[symbol].decimal;\n      console.log(\"mangataBalance\", mangataBalance);\n      console.log(mangataAssets);\n      mangataAssets.tokens.push({\n        \"symbol\": symbol,\n        balance: mangataBalance.free,\n        balanceFloat: mangataBalance.free.div(new _bn.default(decimal)).toNumber()\n      });\n      console.log(mangataAssets);\n    });\n    await Promise.all(balancePromises);\n    const turing = _lodash.default.find(this.assets, {\n      chain: \"turing\"\n    });\n    const balance = await _turingHelper.default.getBalance(turing.address);\n    const decimal = _constants.tokenConfig['TUR'].decimal;\n    turing.tokens.push({\n      symbol: 'TUR',\n      balance: balance.free,\n      balanceFloat: balance.free.div(new _bn.default(decimal)).toNumber()\n    });\n\n    // Create key names for easy access\n    this.assets.mangata = this.assets[1];\n    this.assets.turing = this.assets[2];\n  }\n  print() {\n    console.log(_util2.default.inspect(this.assets, {\n      depth: 4,\n      colors: true\n    }));\n  }\n}\nvar _default = Account;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","Account","constructor","name","keyring","Keyring","account","addFromUri","undefined","publicKey","address","mangataAddress","encodeAddress","chainConfig","mangata","ss58","assets","chain","rococo","proxyAddress","mangataHelper","getProxyAccount","tokens","turing","init","mangataAssets","_","find","console","log","balancePromises","map","asset","symbol","mangataBalance","getBalance","decimal","tokenConfig","push","balance","free","balanceFloat","div","BN","toNumber","Promise","all","turingHelper","print","util","inspect","depth","colors"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["account.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\nimport turingHelper from \"./turingHelper\";\nimport mangataHelper from \"./mangataHelper\";\nimport { chainConfig, tokenConfig } from './constants';\nimport _ from 'lodash';\nimport util from \"util\";\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass Account {\n    constructor(name) {\n        this.name = name;\n        const keyring = new Keyring();\n        this.account = keyring.addFromUri(`//${name}`, undefined, 'sr25519');\n        this.publicKey= this.account.address;\n\n        const mangataAddress = keyring.encodeAddress(this.publicKey, chainConfig.mangata.ss58);\n\n        this.assets=[\n            {\n                chain: \"rococo\",\n                address: keyring.encodeAddress(this.publicKey, chainConfig.rococo.ss58),\n            },\n            {\n                chain: \"mangata\",\n                address: mangataAddress,\n                proxyAddress: mangataHelper.getProxyAccount(mangataAddress),\n                tokens:[],\n            },\n            {\n                chain: \"turing\",\n                address: keyring.encodeAddress(this.publicKey, chainConfig.turing.ss58),\n                tokens:[],\n            }\n        ]\n    }\n    \n    async init(){\n        const mangataAssets = _.find(this.assets, {chain: \"mangata\"});\n\n        console.log(\"mangataHelper.assets\", mangataHelper.assets);\n        const balancePromises = _.map(mangataHelper.assets, async (asset) => {\n            const { symbol } = asset;\n            console.log(\"symbol\", symbol);\n            const mangataBalance = await mangataHelper.getBalance(symbol, mangataAssets.address);\n            console.log(\"mangataBalance\", mangataBalance);\n            const decimal = tokenConfig[symbol].decimal;\n            console.log(\"mangataBalance\", mangataBalance);\n\n            console.log(mangataAssets);\n            mangataAssets.tokens.push(\n                { \"symbol\":symbol,\n                balance: mangataBalance.free,\n                balanceFloat: mangataBalance.free.div(new BN(decimal)).toNumber()\n            });\n            console.log(mangataAssets);\n        });\n\n        await Promise.all(balancePromises);\n\n        const turing = _.find(this.assets, {chain: \"turing\"});\n        const balance = await turingHelper.getBalance(turing.address);\n        const decimal = tokenConfig['TUR'].decimal;\n        turing.tokens.push({ symbol:'TUR', balance: balance.free, balanceFloat: balance.free.div(new BN(decimal)).toNumber()});\n\n        // Create key names for easy access\n        this.assets.mangata = this.assets[1];\n        this.assets.turing = this.assets[2];\n    }\n\n    print(){\n        console.log(util.inspect(this.assets, {depth: 4, colors: true}))\n    }\n}\n\nexport default Account;"],"mappings":"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"}},"mtime":1668988792196},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/account.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _sdk = require(\"@mangata-finance/sdk\");\nvar _api = require(\"@polkadot/api\");\nvar _util = require(\"@polkadot/util\");\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\nvar _turingHelper = _interopRequireDefault(require(\"./turingHelper\"));\nvar _mangataHelper = _interopRequireDefault(require(\"./mangataHelper\"));\nvar _constants = require(\"./constants\");\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nvar _util2 = _interopRequireDefault(require(\"util\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000'\n};\nclass Account {\n  constructor(name) {\n    this.name = name;\n    const keyring = new _api.Keyring();\n    this.keyring = keyring.addFromUri(`//${name}`, undefined, 'sr25519');\n    this.publicKey = this.keyring.address;\n    const mangataAddress = keyring.encodeAddress(this.publicKey, _constants.chainConfig.mangata.ss58);\n    this.assets = [{\n      chain: \"rococo\",\n      address: keyring.encodeAddress(this.publicKey, _constants.chainConfig.rococo.ss58)\n    }, {\n      chain: \"mangata\",\n      address: mangataAddress,\n      proxyAddress: _mangataHelper.default.getProxyAccount(mangataAddress),\n      tokens: []\n    }, {\n      chain: \"turing\",\n      address: keyring.encodeAddress(this.publicKey, _constants.chainConfig.turing.ss58),\n      tokens: []\n    }];\n  }\n  async init() {\n    const mangataAssets = _lodash.default.find(this.assets, {\n      chain: \"mangata\"\n    });\n    const balancePromises = _lodash.default.map(_mangataHelper.default.assets, async asset => {\n      const {\n        symbol\n      } = asset;\n      const mangataBalance = await _mangataHelper.default.getBalance(symbol, mangataAssets.address);\n      const decimal = _constants.tokenConfig[symbol].decimal;\n      mangataAssets.tokens.push({\n        \"symbol\": symbol,\n        balance: mangataBalance.free,\n        balanceFloat: mangataBalance.free.div(new _bn.default(decimal)).toNumber()\n      });\n    });\n    await Promise.all(balancePromises);\n    const turing = _lodash.default.find(this.assets, {\n      chain: \"turing\"\n    });\n    const balance = await _turingHelper.default.getBalance(turing.address);\n    const decimal = _constants.tokenConfig['TUR'].decimal;\n    turing.tokens.push({\n      symbol: 'TUR',\n      balance: balance.free,\n      balanceFloat: balance.free.div(new _bn.default(decimal)).toNumber()\n    });\n  }\n  print() {\n    console.log(_util2.default.inspect(this.assets, {\n      depth: 4,\n      colors: true\n    }));\n  }\n}\nvar _default = Account;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUVVJJTkdfUEFSQV9JRCIsIk1BTkdBVEFfUEFSQV9JRCIsInByb2Nlc3MiLCJlbnYiLCJERUNJTUFMIiwiTUdSIiwiS1NNIiwiVFVSIiwiQWNjb3VudCIsImNvbnN0cnVjdG9yIiwibmFtZSIsImtleXJpbmciLCJLZXlyaW5nIiwiYWRkRnJvbVVyaSIsInVuZGVmaW5lZCIsInB1YmxpY0tleSIsImFkZHJlc3MiLCJtYW5nYXRhQWRkcmVzcyIsImVuY29kZUFkZHJlc3MiLCJjaGFpbkNvbmZpZyIsIm1hbmdhdGEiLCJzczU4IiwiYXNzZXRzIiwiY2hhaW4iLCJyb2NvY28iLCJwcm94eUFkZHJlc3MiLCJtYW5nYXRhSGVscGVyIiwiZ2V0UHJveHlBY2NvdW50IiwidG9rZW5zIiwidHVyaW5nIiwiaW5pdCIsIm1hbmdhdGFBc3NldHMiLCJfIiwiZmluZCIsImJhbGFuY2VQcm9taXNlcyIsIm1hcCIsImFzc2V0Iiwic3ltYm9sIiwibWFuZ2F0YUJhbGFuY2UiLCJnZXRCYWxhbmNlIiwiZGVjaW1hbCIsInRva2VuQ29uZmlnIiwicHVzaCIsImJhbGFuY2UiLCJmcmVlIiwiYmFsYW5jZUZsb2F0IiwiZGl2IiwiQk4iLCJ0b051bWJlciIsIlByb21pc2UiLCJhbGwiLCJ0dXJpbmdIZWxwZXIiLCJwcmludCIsImNvbnNvbGUiLCJsb2ciLCJ1dGlsIiwiaW5zcGVjdCIsImRlcHRoIiwiY29sb3JzIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvbWlrYXNhL0NvZGUveGNtLWRlbW8vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbImFjY291bnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFuZ2F0YSB9IGZyb20gJ0BtYW5nYXRhLWZpbmFuY2Uvc2RrJztcbmltcG9ydCB7IEFwaVByb21pc2UsIFdzUHJvdmlkZXIsIEtleXJpbmcgfSBmcm9tIFwiQHBvbGthZG90L2FwaVwiO1xuaW1wb3J0IHsgdThhVG9IZXggfSBmcm9tIFwiQHBvbGthZG90L3V0aWxcIjtcbmltcG9ydCB7IGRlY29kZUFkZHJlc3MgfSBmcm9tICdAcG9sa2Fkb3QvdXRpbC1jcnlwdG8nO1xuaW1wb3J0IEJOIGZyb20gJ2JuLmpzJztcbmltcG9ydCB0dXJpbmdIZWxwZXIgZnJvbSBcIi4vdHVyaW5nSGVscGVyXCI7XG5pbXBvcnQgbWFuZ2F0YUhlbHBlciBmcm9tIFwiLi9tYW5nYXRhSGVscGVyXCI7XG5pbXBvcnQgeyBjaGFpbkNvbmZpZywgdG9rZW5Db25maWcgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHV0aWwgZnJvbSBcInV0aWxcIjtcblxuY29uc3QgVFVSSU5HX1BBUkFfSUQgPSAyMTE0O1xuY29uc3QgTUFOR0FUQV9QQVJBX0lEID0gcHJvY2Vzcy5lbnYuTUFOR0FUQV9QQVJBX0lEO1xuXG5jb25zdCBERUNJTUFMID0ge1xuICBNR1I6ICcxMDAwMDAwMDAwMDAwMDAwMDAwJyxcbiAgS1NNOiAnMTAwMDAwMDAwMDAwMCcsXG4gIFRVUjogJzEwMDAwMDAwMDAwJyxcbn07XG5cbmNsYXNzIEFjY291bnQge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgY29uc3Qga2V5cmluZyA9IG5ldyBLZXlyaW5nKCk7XG4gICAgICAgIHRoaXMua2V5cmluZyA9IGtleXJpbmcuYWRkRnJvbVVyaShgLy8ke25hbWV9YCwgdW5kZWZpbmVkLCAnc3IyNTUxOScpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleT0gdGhpcy5rZXlyaW5nLmFkZHJlc3M7XG5cbiAgICAgICAgY29uc3QgbWFuZ2F0YUFkZHJlc3MgPSBrZXlyaW5nLmVuY29kZUFkZHJlc3ModGhpcy5wdWJsaWNLZXksIGNoYWluQ29uZmlnLm1hbmdhdGEuc3M1OCk7XG5cbiAgICAgICAgdGhpcy5hc3NldHM9W1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNoYWluOiBcInJvY29jb1wiLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGtleXJpbmcuZW5jb2RlQWRkcmVzcyh0aGlzLnB1YmxpY0tleSwgY2hhaW5Db25maWcucm9jb2NvLnNzNTgpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjaGFpbjogXCJtYW5nYXRhXCIsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogbWFuZ2F0YUFkZHJlc3MsXG4gICAgICAgICAgICAgICAgcHJveHlBZGRyZXNzOiBtYW5nYXRhSGVscGVyLmdldFByb3h5QWNjb3VudChtYW5nYXRhQWRkcmVzcyksXG4gICAgICAgICAgICAgICAgdG9rZW5zOltdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjaGFpbjogXCJ0dXJpbmdcIixcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiBrZXlyaW5nLmVuY29kZUFkZHJlc3ModGhpcy5wdWJsaWNLZXksIGNoYWluQ29uZmlnLnR1cmluZy5zczU4KSxcbiAgICAgICAgICAgICAgICB0b2tlbnM6W10sXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9XG4gICAgXG4gICAgYXN5bmMgaW5pdCgpe1xuICAgICAgICBjb25zdCBtYW5nYXRhQXNzZXRzID0gXy5maW5kKHRoaXMuYXNzZXRzLCB7Y2hhaW46IFwibWFuZ2F0YVwifSk7XG5cbiAgICAgICAgY29uc3QgYmFsYW5jZVByb21pc2VzID0gXy5tYXAobWFuZ2F0YUhlbHBlci5hc3NldHMsIGFzeW5jIChhc3NldCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBzeW1ib2wgfSA9IGFzc2V0O1xuICAgICAgICAgICAgY29uc3QgbWFuZ2F0YUJhbGFuY2UgPSBhd2FpdCBtYW5nYXRhSGVscGVyLmdldEJhbGFuY2Uoc3ltYm9sLCBtYW5nYXRhQXNzZXRzLmFkZHJlc3MpO1xuICAgICAgICAgICAgY29uc3QgZGVjaW1hbCA9IHRva2VuQ29uZmlnW3N5bWJvbF0uZGVjaW1hbDtcbiAgICAgICAgICAgIG1hbmdhdGFBc3NldHMudG9rZW5zLnB1c2goXG4gICAgICAgICAgICAgICAgeyBcInN5bWJvbFwiOnN5bWJvbCxcbiAgICAgICAgICAgICAgICBiYWxhbmNlOiBtYW5nYXRhQmFsYW5jZS5mcmVlLFxuICAgICAgICAgICAgICAgIGJhbGFuY2VGbG9hdDogbWFuZ2F0YUJhbGFuY2UuZnJlZS5kaXYobmV3IEJOKGRlY2ltYWwpKS50b051bWJlcigpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoYmFsYW5jZVByb21pc2VzKTtcblxuICAgICAgICBjb25zdCB0dXJpbmcgPSBfLmZpbmQodGhpcy5hc3NldHMsIHtjaGFpbjogXCJ0dXJpbmdcIn0pO1xuICAgICAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgdHVyaW5nSGVscGVyLmdldEJhbGFuY2UodHVyaW5nLmFkZHJlc3MpO1xuICAgICAgICBjb25zdCBkZWNpbWFsID0gdG9rZW5Db25maWdbJ1RVUiddLmRlY2ltYWw7XG4gICAgICAgIHR1cmluZy50b2tlbnMucHVzaCh7IHN5bWJvbDonVFVSJywgYmFsYW5jZTogYmFsYW5jZS5mcmVlLCBiYWxhbmNlRmxvYXQ6IGJhbGFuY2UuZnJlZS5kaXYobmV3IEJOKGRlY2ltYWwpKS50b051bWJlcigpfSk7XG4gICAgfVxuXG4gICAgcHJpbnQoKXtcbiAgICAgICAgY29uc29sZS5sb2codXRpbC5pbnNwZWN0KHRoaXMuYXNzZXRzLCB7ZGVwdGg6IDQsIGNvbG9yczogdHJ1ZX0pKVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWNjb3VudDsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQXdCO0FBRXhCLE1BQU1BLGNBQWMsR0FBRyxJQUFJO0FBQzNCLE1BQU1DLGVBQWUsR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNGLGVBQWU7QUFFbkQsTUFBTUcsT0FBTyxHQUFH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","map":{"version":3,"names":["TURING_PARA_ID","MANGATA_PARA_ID","process","env","DECIMAL","MGR","KSM","TUR","Account","constructor","name","keyring","Keyring","addFromUri","undefined","publicKey","address","mangataAddress","encodeAddress","chainConfig","mangata","ss58","assets","chain","rococo","proxyAddress","mangataHelper","getProxyAccount","tokens","turing","init","mangataAssets","_","find","balancePromises","map","asset","symbol","mangataBalance","getBalance","decimal","tokenConfig","push","balance","free","balanceFloat","div","BN","toNumber","Promise","all","turingHelper","print","console","log","util","inspect","depth","colors"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["account.js"],"sourcesContent":["import { Mangata } from '@mangata-finance/sdk';\nimport { ApiPromise, WsProvider, Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from '@polkadot/util-crypto';\nimport BN from 'bn.js';\nimport turingHelper from \"./turingHelper\";\nimport mangataHelper from \"./mangataHelper\";\nimport { chainConfig, tokenConfig } from './constants';\nimport _ from 'lodash';\nimport util from \"util\";\n\nconst TURING_PARA_ID = 2114;\nconst MANGATA_PARA_ID = process.env.MANGATA_PARA_ID;\n\nconst DECIMAL = {\n  MGR: '1000000000000000000',\n  KSM: '1000000000000',\n  TUR: '10000000000',\n};\n\nclass Account {\n    constructor(name) {\n        this.name = name;\n        const keyring = new Keyring();\n        this.keyring = keyring.addFromUri(`//${name}`, undefined, 'sr25519');\n        this.publicKey= this.keyring.address;\n\n        const mangataAddress = keyring.encodeAddress(this.publicKey, chainConfig.mangata.ss58);\n\n        this.assets=[\n            {\n                chain: \"rococo\",\n                address: keyring.encodeAddress(this.publicKey, chainConfig.rococo.ss58),\n            },\n            {\n                chain: \"mangata\",\n                address: mangataAddress,\n                proxyAddress: mangataHelper.getProxyAccount(mangataAddress),\n                tokens:[],\n            },\n            {\n                chain: \"turing\",\n                address: keyring.encodeAddress(this.publicKey, chainConfig.turing.ss58),\n                tokens:[],\n            }\n        ]\n    }\n    \n    async init(){\n        const mangataAssets = _.find(this.assets, {chain: \"mangata\"});\n\n        const balancePromises = _.map(mangataHelper.assets, async (asset) => {\n            const { symbol } = asset;\n            const mangataBalance = await mangataHelper.getBalance(symbol, mangataAssets.address);\n            const decimal = tokenConfig[symbol].decimal;\n            mangataAssets.tokens.push(\n                { \"symbol\":symbol,\n                balance: mangataBalance.free,\n                balanceFloat: mangataBalance.free.div(new BN(decimal)).toNumber()\n            });\n        });\n\n        await Promise.all(balancePromises);\n\n        const turing = _.find(this.assets, {chain: \"turing\"});\n        const balance = await turingHelper.getBalance(turing.address);\n        const decimal = tokenConfig['TUR'].decimal;\n        turing.tokens.push({ symbol:'TUR', balance: balance.free, balanceFloat: balance.free.div(new BN(decimal)).toNumber()});\n    }\n\n    print(){\n        console.log(util.inspect(this.assets, {depth: 4, colors: true}))\n    }\n}\n\nexport default Account;"],"mappings":"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"}},"mtime":1668989245568},"{\"assumptions\":{},\"sourceRoot\":\"/Users/mikasa/Code/xcm-demo/src/common/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/mikasa/Code/xcm-demo\",\"filename\":\"/Users/mikasa/Code/xcm-demo/src/common/utils.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/mikasa/Code/xcm-demo\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.20.2:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendExtrinsic = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst sendExtrinsic = async (api, extrinsic, keyPair, {\n  isSudo = false\n} = {}) => {\n  return new Promise(resolve => {\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n    newExtrinsic.signAndSend(keyPair, {\n      nonce: -1\n    }, ({\n      status,\n      dispatchError\n    }) => {\n      console.log(\"status\", status);\n      if (status.type === 'Finalized') {\n        console.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n        if (!_lodash.default.isNil(dispatchError)) {\n          if (dispatchError.isModule) {\n            const metaError = api.registry.findMetaError(dispatchError.asModule);\n            const {\n              docs,\n              name,\n              section\n            } = metaError;\n            const dispatchErrorMessage = JSON.stringify({\n              docs,\n              name,\n              section\n            });\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`;\n            console.log(errMsg);\n          } else {\n            const errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`;\n            console.log(errMsg);\n          }\n        }\n        resolve(status.asFinalized.toString());\n      }\n    });\n  });\n};\nexports.sendExtrinsic = sendExtrinsic;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzZW5kRXh0cmluc2ljIiwiYXBpIiwiZXh0cmluc2ljIiwia2V5UGFpciIsImlzU3VkbyIsIlByb21pc2UiLCJyZXNvbHZlIiwibmV3RXh0cmluc2ljIiwidHgiLCJzdWRvIiwic2lnbkFuZFNlbmQiLCJub25jZSIsInN0YXR1cyIsImRpc3BhdGNoRXJyb3IiLCJjb25zb2xlIiwibG9nIiwidHlwZSIsImFzRmluYWxpemVkIiwidG9TdHJpbmciLCJfIiwiaXNOaWwiLCJpc01vZHVsZSIsIm1ldGFFcnJvciIsInJlZ2lzdHJ5IiwiZmluZE1ldGFFcnJvciIsImFzTW9kdWxlIiwiZG9jcyIsIm5hbWUiLCJzZWN0aW9uIiwiZGlzcGF0Y2hFcnJvck1lc3NhZ2UiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyTXNnIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvbWlrYXNhL0NvZGUveGNtLWRlbW8vc3JjL2NvbW1vbi8iLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmV4cG9ydCBjb25zdCBzZW5kRXh0cmluc2ljID0gYXN5bmMgKGFwaSwgZXh0cmluc2ljLCBrZXlQYWlyLCB7IGlzU3VkbyA9IGZhbHNlIH0gPSB7fSkgPT4ge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcblxuICAgIGNvbnN0IG5ld0V4dHJpbnNpYyA9IGlzU3VkbyA/IGFwaS50eC5zdWRvLnN1ZG8oZXh0cmluc2ljKSA6IGV4dHJpbnNpYztcblx0XHRuZXdFeHRyaW5zaWMuc2lnbkFuZFNlbmQoa2V5UGFpciwgeyBub25jZTogLTEgfSwgKHsgc3RhdHVzLCBkaXNwYXRjaEVycm9yIH0pID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKFwic3RhdHVzXCIsIHN0YXR1cyk7XG5cdFx0XHRpZiAoc3RhdHVzLnR5cGUgPT09ICdGaW5hbGl6ZWQnKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCdGaW5hbGl6ZSBleHRyaW5zaWMgaW4gYmxvY2s6ICcsIHN0YXR1cy5hc0ZpbmFsaXplZC50b1N0cmluZygpKTtcblxuXHRcdFx0XHRpZiAoIV8uaXNOaWwoZGlzcGF0Y2hFcnJvcikpIHtcblx0XHRcdFx0XHRpZiAoZGlzcGF0Y2hFcnJvci5pc01vZHVsZSkge1xuXHRcdFx0XHRcdFx0Y29uc3QgbWV0YUVycm9yID0gYXBpLnJlZ2lzdHJ5LmZpbmRNZXRhRXJyb3IoZGlzcGF0Y2hFcnJvci5hc01vZHVsZSlcblx0XHRcdFx0XHRcdGNvbnN0IHsgZG9jcywgbmFtZSwgc2VjdGlvbiB9ID0gbWV0YUVycm9yXG5cdFx0XHRcdFx0XHRjb25zdCBkaXNwYXRjaEVycm9yTWVzc2FnZSA9IEpTT04uc3RyaW5naWZ5KHsgZG9jcywgbmFtZSwgc2VjdGlvbiB9KVxuXHRcdFx0XHRcdFx0Y29uc3QgZXJyTXNnID0gYFRyYW5zYWN0aW9uIGZpbmFsaXplZCB3aXRoIGVycm9yIGJ5IGJsb2NrY2hhaW4gJHtkaXNwYXRjaEVycm9yTWVzc2FnZX1gXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJNc2cpXG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNvbnN0IGVyck1zZyA9IGBUcmFuc2FjdGlvbiBmaW5hbGl6ZWQgd2l0aCBlcnJvciBieSBibG9ja2NoYWluICR7ZGlzcGF0Y2hFcnJvci50b1N0cmluZygpfWBcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGVyck1zZylcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXNvbHZlKHN0YXR1cy5hc0ZpbmFsaXplZC50b1N0cmluZygpKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fSk7XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUF1QjtBQUVoQixNQUFNQSxhQUFhLEdBQUcsT0FBT0MsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRTtFQUFFQyxNQUFNLEdBQUc7QUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUs7RUFDeEYsT0FBTyxJQUFJQyxPQUFPLENBQUVDLE9BQU8sSUFBSztJQUU3QixNQUFNQyxZQUFZLEdBQUdILE1BQU0sR0FBR0gsR0FBRyxDQUFDTyxFQUFFLENBQUNDLElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxTQUFTLENBQUMsR0FBR0EsU0FBUztJQUN2RUssWUFBWSxDQUFDRyxXQUFXLENBQUNQLE9BQU8sRUFBRTtNQUFFUSxLQUFLLEVBQUUsQ0FBQztJQUFFLENBQUMsRUFBRSxDQUFDO01BQUVDLE1BQU07TUFBRUM7SUFBYyxDQUFDLEtBQUs7TUFDL0VDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFFBQVEsRUFBRUgsTUFBTSxDQUFDO01BQzdCLElBQUlBLE1BQU0sQ0FBQ0ksSUFBSSxLQUFLLFdBQVcsRUFBRTtRQUNoQ0YsT0FBTyxDQUFDQyxHQUFHLENBQUMsK0JBQStCLEVBQUVILE1BQU0sQ0FBQ0ssV0FBVyxDQUFDQyxRQUFRLEVBQUUsQ0FBQztRQUUzRSxJQUFJLENBQUNDLGVBQUMsQ0FBQ0MsS0FBSyxDQUFDUCxhQUFhLENBQUMsRUFBRTtVQUM1QixJQUFJQSxhQUFhLENBQUNRLFFBQVEsRUFBRTtZQUMzQixNQUFNQyxTQUFTLEdBQUdyQixHQUFHLENBQUNzQixRQUFRLENBQUNDLGFBQWEsQ0FBQ1gsYUFBYSxDQUFDWSxRQUFRLENBQUM7WUFDcEUsTUFBTTtjQUFFQyxJQUFJO2NBQUVDLElBQUk7Y0FBRUM7WUFBUSxDQUFDLEdBQUdOLFNBQVM7WUFDekMsTUFBTU8sb0JBQW9CLEdBQUdDLElBQUksQ0FBQ0MsU0FBUyxDQUFDO2NBQUVMLElBQUk7Y0FBRUMsSUFBSTtjQUFFQztZQUFRLENBQUMsQ0FBQztZQUNwRSxNQUFNSSxNQUFNLEdBQUksa0RBQWlESCxvQkFBcUIsRUFBQztZQUN2RmYsT0FBTyxDQUFDQyxHQUFHLENBQUNpQixNQUFNLENBQUM7VUFDcEIsQ0FBQyxNQUFNO1lBQ04sTUFBTUEsTUFBTSxHQUFJLGtEQUFpRG5CLGFBQWEsQ0FBQ0ssUUFBUSxFQUFHLEVBQUM7WUFDM0ZKLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDaUIsTUFBTSxDQUFDO1VBQ3BCO1FBQ0Q7UUFFQTFCLE9BQU8sQ0FBQ00sTUFBTSxDQUFDSyxXQUFXLENBQUNDLFFBQVEsRUFBRSxDQUFDO01BQ3ZDO0lBQ0QsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUFBIn0=","map":{"version":3,"names":["sendExtrinsic","api","extrinsic","keyPair","isSudo","Promise","resolve","newExtrinsic","tx","sudo","signAndSend","nonce","status","dispatchError","console","log","type","asFinalized","toString","_","isNil","isModule","metaError","registry","findMetaError","asModule","docs","name","section","dispatchErrorMessage","JSON","stringify","errMsg"],"sourceRoot":"/Users/mikasa/Code/xcm-demo/src/common/","sources":["utils.js"],"sourcesContent":["import _ from 'lodash';\n\nexport const sendExtrinsic = async (api, extrinsic, keyPair, { isSudo = false } = {}) => {\n\treturn new Promise((resolve) => {\n\n    const newExtrinsic = isSudo ? api.tx.sudo.sudo(extrinsic) : extrinsic;\n\t\tnewExtrinsic.signAndSend(keyPair, { nonce: -1 }, ({ status, dispatchError }) => {\n\t\t\tconsole.log(\"status\", status);\n\t\t\tif (status.type === 'Finalized') {\n\t\t\t\tconsole.log('Finalize extrinsic in block: ', status.asFinalized.toString());\n\n\t\t\t\tif (!_.isNil(dispatchError)) {\n\t\t\t\t\tif (dispatchError.isModule) {\n\t\t\t\t\t\tconst metaError = api.registry.findMetaError(dispatchError.asModule)\n\t\t\t\t\t\tconst { docs, name, section } = metaError\n\t\t\t\t\t\tconst dispatchErrorMessage = JSON.stringify({ docs, name, section })\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchErrorMessage}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst errMsg = `Transaction finalized with error by blockchain ${dispatchError.toString()}`\n\t\t\t\t\t\tconsole.log(errMsg)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresolve(status.asFinalized.toString());\n\t\t\t}\n\t\t});\n\t});\n}"],"mappings":";;;;;;AAAA;AAAuB;AAEhB,MAAMA,aAAa,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAAEC,MAAM,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,KAAK;EACxF,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAE7B,MAAMC,YAAY,GAAGH,MAAM,GAAGH,GAAG,CAACO,EAAE,CAACC,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC,GAAGA,SAAS;IACvEK,YAAY,CAACG,WAAW,CAACP,OAAO,EAAE;MAAEQ,KAAK,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;MAAEC,MAAM;MAAEC;IAAc,CAAC,KAAK;MAC/EC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC;MAC7B,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;QAChCF,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;QAE3E,IAAI,CAACC,eAAC,CAACC,KAAK,CAACP,aAAa,CAAC,EAAE;UAC5B,IAAIA,aAAa,CAACQ,QAAQ,EAAE;YAC3B,MAAMC,SAAS,GAAGrB,GAAG,CAACsB,QAAQ,CAACC,aAAa,CAACX,aAAa,CAACY,QAAQ,CAAC;YACpE,MAAM;cAAEC,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,GAAGN,SAAS;YACzC,MAAMO,oBAAoB,GAAGC,IAAI,CAACC,SAAS,CAAC;cAAEL,IAAI;cAAEC,IAAI;cAAEC;YAAQ,CAAC,CAAC;YACpE,MAAMI,MAAM,GAAI,kDAAiDH,oBAAqB,EAAC;YACvFf,OAAO,CAACC,GAAG,CAACiB,MAAM,CAAC;UACpB,CAAC,MAAM;YACN,MAAMA,MAAM,GAAI,kDAAiDnB,aAAa,CAACK,QAAQ,EAAG,EAAC;YAC3FJ,OAAO,CAACC,GAAG,CAACiB,MAAM,CAAC;UACpB;QACD;QAEA1B,OAAO,CAACM,MAAM,CAACK,WAAW,CAACC,QAAQ,EAAE,CAAC;MACvC;IACD,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC;AAAA"}},"mtime":1668989758849}}